format_version: 1.3.1
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
    - BIN_NAME: workflow-editor
    - BIN_ARCH: x86_64
    - BIN_ARCH_ARM64: arm64
    - BIN_OS_DARWIN: Darwin
    - BIN_OS_LINUX: Linux
    - BIN_PATH_DARWIN: _bin/$BIN_NAME-$BIN_OS_DARWIN-$BIN_ARCH
    - BIN_PATH_DARWIN_ARM64: _bin/$BIN_NAME-$BIN_OS_DARWIN-$BIN_ARCH_ARM64
    - BIN_PATH_LINUX: _bin/$BIN_NAME-$BIN_OS_LINUX-$BIN_ARCH

    - PORT: "1234"
    - DEV_SERVER_PORT: "4567"
    - MODE: "CLI"

workflows:
  install-deps:
    envs:
      - NODE_ENV: "prod"
    steps:
      - script@1.1.5:
          title: Install NodeJS with asdf
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -x
                if ! [ -d ~/.asdf ]; then
                  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.11.3
                fi
                envman add --key PATH --value $PATH
                source ~/.asdf/asdf.sh
                asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git ||:
                asdf reshim nodejs
                asdf install nodejs
      - script:
          deps:
            apt_get:
              - name: ruby
              - name: ruby-dev
              - name: build-essential
              # for cypress
              - name: xdg-open
              - name: xvfb
              - name: libgtk2.0-0
              - name: libgtk-3-0
              - name: libgconf-2-4
              - name: libnss3
              - name: libxss1
              - name: libasound2
              - name: libxtst6
          inputs:
            - content: |-
                #!/bin/bash
                set -ex
                gem install -f bundler:2.1.4
                bundle install
                npm install
  install-go-tools:
    steps:
      - script:
          title: Install Go tools
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                go install golang.org/x/lint/golint@latest
                go install github.com/kisielk/errcheck@latest
                go install github.com/GeertJohan/go.rice/rice@latest
  setup-client:
    envs:
      - NODE_ENV: "prod"
    steps:
      - script:
          title: Build & compile client
          description: Set up and build plugin api from clean state
          inputs:
            - content: |-
                #!/bin/bash
                set -ex
                npm run build
                ./_scripts/compile_api.sh

  ci:
    envs:
      - NODE_ENV: "prod"
    steps:
      - bitrise-run@0:
          title: Test API
          inputs:
            - workflow_id: test-api
      - bitrise-run@0:
          title: Test client
          inputs:
            - workflow_id: test-client

  test-api:
    before_run:
      - install-go-tools
    steps:
      - script:
          title: Go Lint & Vet & Check for unhandled errors
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                go vet ./...
                golint ./...
                errcheck -asserts=true -blank=true ./...
      - script:
          title: Go Test
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                go test ./...

  test-client:
    envs:
      - NODE_ENV: "prod"
    before_run:
      - install-deps
      - setup-client
    steps:
      - npm@1:
          title: Run linter
          inputs:
            - command: run lint
      - npm@1:
          title: Run unit tests
          inputs:
            - command: run test
      - npm@1:
          title: Run E2E tests
          inputs:
            - command: run e2e:ci

  create-binaries:
    title: Create binaries
    description: |
      Creates Linux and Darwin binaries with embedded assets
    envs:
      - NODE_ENV: "prod"
    steps:
      - script:
          title: Compile Api
          inputs:
            - content: |-
                #!/bin/bash
                set -ex
                ./_scripts/compile_api.sh
