format_version: 1.3.1
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs: []

trigger_map:
- pattern: test**
  is_pull_request_allowed: true
  workflow: test
- pattern: "*"
  is_pull_request_allowed: true
  workflow: fallback

workflows:
  test:
    description: |-
      You can use this workflow by running: bitrise run test
      Or by triggering: bitrise trigger test
      If you use trigger, you can trigger it with any pattern
        which starts with 'test', like: bitrise trigger test-1
        or: bitrise trigger test/1
      You can define the mapping between trigger patterns and
        workflows in the 'trigger_map' section.
    steps:
    - timestamp:
        outputs:
        - UNIX_TIMESTAMP:
        - ISO_DATETIME:
    - script:
        title: Hello Bitrise!
        inputs:
        - content: |-
            #!/bin/bash
            echo "Welcome to Bitrise!"
            echo "Current time is: ${ISO_DATETIME}"
            echo
            echo "Your specified Project Title is: ${BITRISE_APP_TITLE}"
            echo " and the primary development branch is: ${BITRISE_DEV_BRANCH}"
  fallback:
    description: |-
      This is a fallback workflow. As defined in the 'trigger_map' section
      this workflow will be selected in any case if you run 'bitrise trigger'
      with any pattern which does not match any other in
      the 'tigger_map' definition. For example 'bitrise trigger my-custom-pattern'
      or 'bitrise trigger my/custom/pattern' will both select this workflow.
    steps:
    - script:
        title: Fallback
        inputs:
        - content: |-
            #!/bin/bash
            echo "This is a the fallback workflow, used"
            echo " if you 'bitrise trigger' a build but the pattern"
            echo " does not match any other pattern in the trigger_map"
