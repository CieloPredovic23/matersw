format_version: 1.3.0
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - API_SERVER_PORT: "3321"
  - FRONTEND_PORT: "4567"
  # define in your .bitrise.secrets.yml
  - BITRISE_WORKFLOW_EDITOR_ROOT_PATH_ON_WEBSITE: "$BITRISE_WORKFLOW_EDITOR_ROOT_PATH_ON_WEBSITE"
  - WEBSITE_DEVELOPMENT_WEBSERVER_ROOT_PATH: "$WEBSITE_DEVELOPMENT_WEBSERVER_ROOT_PATH"

workflows:
  up-api:
    steps:
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go get github.com/codegangsta/gin
            gin --port $API_SERVER_PORT
  up-middleman-server:
    steps:
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            bundle exec middleman server
  up-middleman-jasmine:
    steps:
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            bundle exec middleman build
            mkdir -p ./spec/javascripts/main/
            cp -f ./build/javascripts/main.js ./spec/javascripts/main/
            rm -rf ./build
            bundle exec middleman server
            rm -rf ./spec/javascripts/main/

  ci:
    before_run:
    - _install_test_tools
    - test

  install:
    steps:
    - script:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go install

  deps-update:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf ./vendor
            rm -rf ./Godeps
            go get -u github.com/tools/godep
            godep version
            go get -t -d ./...
            go get github.com/Sirupsen/logrus
            go get golang.org/x/sys/unix
            go get github.com/bitrise-io/envman/models
            go get github.com/bitrise-io/stepman/models
            go get github.com/ryanuber/go-glob
            godep save ./...

  assets-precompile:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get github.com/GeertJohan/go.rice/rice
            cd ./editor
            rice embed-go

  _install_test_tools:
    steps:
    - script:
        title: Install required testing tools
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            # Check for unhandled errors
            go get -u github.com/kisielk/errcheck
            # Go lint
            go get -u github.com/golang/lint/golint

  test:
    steps:
    - script:
        title: GOLIST_WITHOUT_VENDOR
        inputs:
        - content: |-
            set -ex
            no_vendor_paths="$(go list ./... | grep -v vendor)"
            envman add --key GOLIST_WITHOUT_VENDOR --value "$no_vendor_paths"
    - script:
        title: Go Test
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            # go test $GOLIST_WITHOUT_VENDOR
            go test ./...
    - script:
        title: Go Vet
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go vet $GOLIST_WITHOUT_VENDOR
    - script:
        title: Err check
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            errcheck -asserts=true -blank=true $GOLIST_WITHOUT_VENDOR
    - script:
        title: Go Lint
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            # lint
            while read -r line; do
              golint -set_exit_status $line
            done <<< "$GOLIST_WITHOUT_VENDOR"
