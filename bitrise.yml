---
format_version: "6"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: other
trigger_map:
  - push_branch: master
    workflow: deploy-new-version
  - pull_request_source_branch: "*"
    workflow: ci
workflows:
  _slack:
    steps:
      - slack@2.3.0:
          inputs:
            - webhook_url: https://hooks.slack.com/services/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
            - channel: bitrise-dev-lifeline
            - from_username: "$BITRISE_APP_TITLE - $BITRISE_GIT_BRANCH - OK"
            - from_username_on_error: "$BITRISE_APP_TITLE - $BITRISE_GIT_BRANCH - ERROR"
            - message: |-
                Build URL: $BITRISE_BUILD_URL
                Branch: $BITRISE_GIT_BRANCH
                Workflow: $BITRISE_TRIGGERED_WORKFLOW_ID
  ci:
    after_run:
      - _slack
    steps:
      - bitrise-run@0:
          inputs:
            - workflow_id: ci
          title: CI checks
      - script@1:
          title: Export test results
          is_skippable: true
          inputs:
            - content: |
                #!/bin/env bash
                set -ex

                # Creating a sub-directory for the test run within the BITRISE_TEST_RESULT_DIR:

                echo "the current directory"
                pwd

                test_run_dir="$BITRISE_TEST_RESULT_DIR/result_dir_1"
                mkdir "$test_run_dir"


                DIR=spec/integration/cypress/results/
                if [ -d "$DIR" ];
                then
                    cp -r spec/integration/cypress/results/test-report.xml "$test_run_dir/test-report.xml"
                fi

                DIR=spec/integration/cypress/screenshots/
                if [ -d "$DIR" ];
                then
                    find spec/integration/cypress/screenshots -mindepth 2 -type f -exec mv -i '{}' "$test_run_dir" ';'
                fi

                DIR=spec/integration/cypress/videos/
                if [ -d "$DIR" ];
                then
                    find spec/integration/cypress/videos -mindepth 2 -type f -exec mv -i '{}' "$test_run_dir" ';'
                fi

                touch "$test_run_dir/test-info.json"
                echo "{ \"test-name\":\"Cypress tests\" }" > "$test_run_dir/test-info.json"
          is_always_run: true
      - deploy-to-bitrise-io@2: {}
      - script@1.2:
          title: Build and deploy Storybook
          inputs:
            - content: |
                #!/bin/bash
                npm run build-storybook
                node ./.storybook/deploy-storybook.js

    before_run:
      - setup
  deploy-new-version:
    before_run:
      - ci
    steps:
      - script@1.1.6:
          title: Bump editor version (next release)
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -e

                # update patch version
                NEW_VERSION=$(npm version --no-git-tag-version patch)
                next_version=${NEW_VERSION:1} ./_scripts/set_version.sh version/version.go bitrise-plugin.yml
                FILES=(package.json package-lock.json version/version.go bitrise-plugin.yml)

                # push changes
                git add "${FILES[@]}"
                git commit -m "[skip ci] - $NEW_VERSION"
                git push origin HEAD:master
      - script@1:
          title: Trigger website deploy and plugin release workflows
          inputs:
            - content: |
                #!/usr/bin/env bash
                # fail if any commands fails
                set -ex

                curl --fail https://app.bitrise.io/app/1686da85b5935fd6/build/start.json --data '{"hook_info":{"type":"bitrise","build_trigger_token":"'"${BUILD_TRIGGER_TOKEN}"'"},"build_params":{"branch":"master","commit_hash":"'"${BITRISE_GIT_COMMIT}"'","workflow_id":"website-deploy"},"triggered_by":"deploy-new-version workflow"}'
                curl --fail https://app.bitrise.io/app/1686da85b5935fd6/build/start.json --data '{"hook_info":{"type":"bitrise","build_trigger_token":"'"${BUILD_TRIGGER_TOKEN}"'"},"build_params":{"branch":"master","commit_hash":"'"${BITRISE_GIT_COMMIT}"'","workflow_id":"plugin-release"},"triggered_by":"deploy-new-version workflow"}'
  plugin-release:
    steps:
      - bitrise-run@0:
          title: Install packages
          inputs:
            - workflow_id: setup-client
      - get-npm-package-version@1:
          title: Get editor version
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex
                source ~/.asdf/asdf.sh
                envman add --key PATH --value $PATH
          title: Apply ASDF env
      - npm@1:
          inputs:
            - command: run build:plugin
          title: Build plugin
      - deploy-to-bitrise-io:
          title: Deploy to Bitrise.io - Plugin
          is_always_run: false
      - generate-changelog@0.9:
          inputs:
            - new_version: "$NPM_PACKAGE_VERSION"
      - github-release@0.11:
          inputs:
            - api_token: "$GITHUB_API_TOKEN"
            - username: "$GITHUB_USERNAME"
            - repository_url: https://github.com/bitrise-io/bitrise-workflow-editor.git
            - draft: "no"
            - name: v$NPM_PACKAGE_VERSION
            - body: |-
                $BITRISE_CHANGELOG

                ### Install or upgrade

                To install this version, run the following commands (in a bash shell):

                ```
                bitrise plugin install --source https://github.com/bitrise-io/bitrise-workflow-editor.git --version $NPM_PACKAGE_VERSION
                ```

                To update the already installed plugin to the latest version:

                ```
                bitrise plugin update workflow-editor
                ```

                That's all, you're ready to go!

                To run the workflow editor plugin call:

                ```
                bitrise :workflow-editor
                ```
            - tag: "$NPM_PACKAGE_VERSION"
            - files_to_upload: |-
                $BIN_PATH_DARWIN
                $BIN_PATH_LINUX
                $BIN_PATH_DARWIN_ARM64
      - script@1:
          title: Create Discuss topic
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e

                # generate release content...
                go install github.com/cbroglie/mustache/cmd/mustache@latest
                DATA="---
                VERSION: $NPM_PACKAGE_VERSION
                CHANGELOG: |
                  ${BITRISE_CHANGELOG//$'\n'/$'\n  '}
                "

                DISCUSS_RELEASE_CONTENT=$(echo "$DATA" | mustache release/discuss_release.mustache)
                DISCUSS_CHANGELOG_CATEGORY_ID=6

                curl -X POST "https://discuss.bitrise.io/posts" \
                       -H "Content-Type: multipart/form-data;" \
                       -F "api_key=$DISCUSS_API_KEY" \
                       -F "api_username=$DISCUSS_USERNAME" \
                       -F "category=$DISCUSS_CHANGELOG_CATEGORY_ID" \
                       -F "title=Workflow Editor v$NPM_PACKAGE_VERSION released" \
                       -F "raw=$DISCUSS_RELEASE_CONTENT"
    envs:
      - opts:
          is_expand: false
        NODE_ENV: prod
      - opts:
          is_expand: false
        DISCUSS_USERNAME: ninja
      - opts:
          is_expand: false
        BIN_PATH_DARWIN: _bin/workflow-editor-Darwin-x86_64
      - opts:
          is_expand: false
        BIN_PATH_LINUX: _bin/workflow-editor-Linux-x86_64
      - opts:
          is_expand: false
        BIN_PATH_DARWIN_ARM64: _bin/workflow-editor-Darwin-arm64
    before_run:
      - setup
  setup:
    after_run: []
    steps:
      - activate-ssh-key@4.0: {}
      - set-git-credentials@1.0.0:
          inputs:
            - git_email_address: ci@bitrise.io
            - git_user_name: "$GITHUB_USERNAME"
      - change-workdir@1:
          inputs:
            - path: "$GOPATH/src/github.com/bitrise-io/bitrise-workflow-editor"
      - git-clone:
          inputs:
            - update_submodules: "no"
      - script@1:
          title: apt-get update
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x

                # added due to invalid yarn signature error, not sure if we need this in the long run
                sudo apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com

                sudo apt-get update -qq
  update-algolia:
    after_run: []
    steps:
      - script@1.1.6:
          title:
          inputs:
            - content: |-
                #!/bin/bash
                set -e

                # mock envvars, spec.json
                curl http://bitrise-steplib-collection.s3.amazonaws.com/spec.json -o /tmp/spec.json
                export SPEC_JSON_PATH=/tmp/spec.json
                # export DRY_RUN=true

                # actual step content
                git clone https://github.com/bitrise-io/steplib-search.git

                export BITRISE_SOURCE_DIR="$BITRISE_SOURCE_DIR/steplib-search"
                cd steplib-search

                bitrise run update-algolia
          asset_urls:
            icon.svg: https://bitrise-steplib-collection.s3.amazonaws.com/steps/script/assets/icon.svg
      - slack:
          inputs:
            - channel: "#bitrise-steplib"
            - text: New version!
            - emoji: ":bell:"
            - webhook_url: "$SLACK_WEBHOOK_URL"
  website-deploy:
    steps:
      - bitrise-run@0:
          title: Install packages
          inputs:
            - workflow_id: setup-client
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex
                source ~/.asdf/asdf.sh
                envman add --key PATH --value $PATH
          title: Apply ASDF env
      - get-npm-package-version@1:
          title: Get editor version
      - npm@1:
          inputs:
            - command: run build:website
          title: Build website
      - script@1:
          inputs:
            - content: |-
                #!/bin/bash
                set -euxo pipefail
                KEY_FILE_PATH=$(mktemp -d)/keyfile.json
                echo "${GCS_SERVICE_ACCOUNT_CREDENTIALS_B64}" | base64 --decode > ${KEY_FILE_PATH}
                gcloud auth activate-service-account --key-file=${KEY_FILE_PATH}
                gcloud storage cp -R ./build gs://$FRONTEND_ASSET_BUCKET/workflow_editor/$NPM_PACKAGE_VERSION
                rm $KEY_FILE_PATH
          title: Deploy to GCS
    envs:
      - opts:
          is_expand: false
        NODE_ENV: prod
      - opts:
          is_expand: false
        PUBLIC_URL_ROOT: https://workflow-editor-cdn.bitrise.io/workflow_editor
      - opts:
          is_expand: false
        FRONTEND_ASSET_BUCKET: workflow-editor-cdn.bitrise.io
    before_run:
      - setup
meta:
  bitrise.io:
    machine_type_id: elite
    stack: linux-docker-android-20.04
app:
  envs:
    - opts:
        is_expand: false
      STORYBOOK_GCP_DEPLOY_BUCKET: bitrise-storybook-dev
