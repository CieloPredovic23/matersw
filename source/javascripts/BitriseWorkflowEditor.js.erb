(function() {

"use strict";

var BitriseWorkflowEditor = angular.module("BitriseWorkflowEditor", [
	"ngRoute",
	"ngSanitize",
	"ngAnimate"
]);

BitriseWorkflowEditor.config(function($compileProvider) {
	$compileProvider.debugInfoEnabled(false);
});

BitriseWorkflowEditor.config(function($animateProvider) {
	$animateProvider.classNameFilter(/angular-animated/);
});

BitriseWorkflowEditor.config(function($locationProvider) {
	$locationProvider.html5Mode(true);
});

BitriseWorkflowEditor.config(function($routeProvider) {

	var routes = [{
		endpoints: ["", "/"],
		configuration: {
			redirectTo: "/editor"
		}
	}, {
		endpoints: ["<%= environment_dependent_path(data[:routes][:editor]) %>"],
		configuration: {
			templateUrl: "<%= environment_dependent_path(data[:routes][:editor_template]) %>"
		}
	}, {
		endpoints: ["<%= environment_dependent_path(data[:routes][:code_signing]) %>"],
		configuration: {
			templateUrl: "<%= environment_dependent_path(data[:routes][:code_signing_template]) %>"
		}
	}, {
		endpoints: ["<%= environment_dependent_path(data[:routes][:secrets]) %>"],
		configuration: {
			templateUrl: "<%= environment_dependent_path(data[:routes][:secrets_template]) %>",
		}
	}, {
		endpoints: ["<%= environment_dependent_path(data[:routes][:app_env_vars]) %>"],
		configuration: {
			templateUrl: "<%= environment_dependent_path(data[:routes][:app_env_vars_template]) %>",
		}
	}, {
		endpoints: ["<%= environment_dependent_path(data[:routes][:triggers]) %>"],
		configuration: {
			templateUrl: "<%= environment_dependent_path(data[:routes][:triggers_template]) %>",
		}
	}, {
		endpoints: ["<%= environment_dependent_path(data[:routes][:yml]) %>"],
		configuration: {
			templateUrl: "<%= environment_dependent_path(data[:routes][:yml_template]) %>"
		}
	}];

	var defaultRoute = routes[0];
	var defaultEndpoint = routes[0].endpoints[0];

	_.each(routes, function(aRoute) {
		_.each(aRoute.endpoints, function(anEndpoint) {
			$routeProvider.when(anEndpoint, aRoute.configuration);
		});
	});

	$routeProvider.otherwise(defaultEndpoint, defaultRoute.configuration);

});

})();
