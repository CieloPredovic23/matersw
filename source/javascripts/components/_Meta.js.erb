(function() {

"use strict";

angular.module("BitriseWorkflowEditor").factory("Meta", function() {

	var Meta = function(userMetaConfig, defaultMetaConfig) {
		this.userMetaConfig = userMetaConfig;
		if (!this.userMetaConfig) {
			this.userMetaConfig = {};
		}

		this.defaultMetaConfig = defaultMetaConfig;
	};

	Meta.prototype.valueGetterSetter = function(bundleID, key, value) {
		if (value !== undefined) {
			if (!this.userMetaConfig[bundleID]) {
				this.userMetaConfig[bundleID] = {};
			}
			this.userMetaConfig[bundleID][key] = value;

			// TODO: remove the following if block, it is only required during secrets' "is expose" migration
			if (key == "is_expose" && bundleID == "bitrise.io.workflow-editor") {
				this.userMetaConfig.is_expose = value;
			}

			if (value === null) {
				delete this.userMetaConfig[bundleID][key];
			}
			else if (this.defaultMetaConfig && this.defaultMetaConfig[bundleID] && this.defaultMetaConfig[bundleID][key] !== undefined && angular.equals(this.defaultMetaConfig[bundleID][key], value)) {
				delete this.userMetaConfig[bundleID][key];
			}

			// TODO: remove the following if block, it is only required during secrets' "is expose" migration
			if (key == "is_expose" && bundleID == "bitrise.io.workflow-editor" && this.defaultMetaConfig && this.defaultMetaConfig.is_expose == value) {
				delete this.userMetaConfig.is_expose;
			}

			if (angular.equals(this.userMetaConfig[bundleID], {})) {
				delete this.userMetaConfig[bundleID];
			}
		}

		if (this.userMetaConfig && this.userMetaConfig[bundleID] && this.userMetaConfig[bundleID][key] !== undefined) {
			return this.userMetaConfig[bundleID][key];
		}

		// TODO: remove the following if block, it is only required during secrets' "is expose" migration
		if (key == "is_expose" && bundleID == "bitrise.io.workflow-editor" && this.userMetaConfig.is_expose !== undefined) {
			return this.userMetaConfig.is_expose;
		}

		if (this.defaultMetaConfig && this.defaultMetaConfig[bundleID] && this.defaultMetaConfig[bundleID][key] !== undefined) {
			return this.defaultMetaConfig[bundleID][key];
		}

		return null;
	};

	return Meta;

});

})();
