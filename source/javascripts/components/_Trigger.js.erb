(function() {
	"use strict";

	angular.module("BitriseWorkflowEditor").factory("Trigger", function() {
		var Trigger = function(triggerConfig) {
			this.triggerConfig = triggerConfig ? triggerConfig : {};
		};

		Trigger.prototype.type = function(type) {
			if (type !== undefined) {
				delete this.triggerConfig["push_branch"];
				delete this.triggerConfig["pull_request_source_branch"];
				delete this.triggerConfig["pull_request_target_branch"];
				delete this.triggerConfig["tag"];

				switch (type) {
					case "push":
						this.triggerConfig.push_branch = "";

						break;
					case "pull-request":
						this.triggerConfig.pull_request_source_branch = "";
						this.triggerConfig.pull_request_target_branch = "";

						break;
					case "tag":
						this.triggerConfig.tag = "";

						break;
				}
			}

			if (this.triggerConfig.push_branch !== undefined) {
				return "push";
			}

			if (
				this.triggerConfig.pull_request_source_branch !== undefined ||
				this.triggerConfig.pull_request_target_branch !== undefined
			) {
				return "pull-request";
			}

			if (this.triggerConfig.tag !== undefined) {
				return "tag";
			}
		};
		
		Trigger.prototype.setTarget = function(target) {
			delete this.triggerConfig.workflow;
			delete this.triggerConfig.pipeline;
			this.triggerConfig[target.type] = target.value;
		};

		Trigger.prototype.getTarget = function(target) {
			var type = this.triggerConfig.workflow ? "workflow" : "pipeline"
			return {
				type: type,
				value: this.triggerConfig[type]
			}
		};

		Trigger.prototype.pushBranchPattern = function(pushBranchPattern) {
			if (pushBranchPattern !== undefined) {
				if (this.type() != "push") {
					this.type("push");
				}

				this.triggerConfig.push_branch = pushBranchPattern
					? pushBranchPattern
					: "*";
			}

			if (this.type() != "push") {
				return undefined;
			}

			return this.triggerConfig.push_branch;
		};

		Trigger.prototype.pullRequestSourceBranchPattern = function(
			pullRequestSourceBranchPattern
		) {
			if (pullRequestSourceBranchPattern !== undefined) {
				if (this.type() != "pull-request") {
					this.type("pull-request");
				}

				this.triggerConfig.pull_request_source_branch =
					pullRequestSourceBranchPattern &&
					pullRequestSourceBranchPattern != "*"
						? pullRequestSourceBranchPattern
						: this.triggerConfig.pull_request_target_branch
						? undefined
						: "*";
			}

			if (this.type() != "pull-request") {
				return undefined;
			}

			return this.triggerConfig.pull_request_source_branch
				? this.triggerConfig.pull_request_source_branch
				: "*";
		};

		Trigger.prototype.pullRequestTargetBranchPattern = function(
			pullRequestTargetBranchPattern
		) {
			if (pullRequestTargetBranchPattern !== undefined) {
				if (this.type() != "pull-request") {
					this.type("pull-request");
				}

				this.triggerConfig.pull_request_target_branch =
					pullRequestTargetBranchPattern &&
					pullRequestTargetBranchPattern != "*"
						? pullRequestTargetBranchPattern
						: this.triggerConfig.pull_request_source_branch
						? undefined
						: "*";
			}

			if (this.type() != "pull-request") {
				return undefined;
			}

			return this.triggerConfig.pull_request_target_branch
				? this.triggerConfig.pull_request_target_branch
				: "*";
		};

		Trigger.prototype.tagPattern = function(tagPattern) {
			if (tagPattern !== undefined) {
				if (this.type() != "tag") {
					this.type("tag");
				}

				this.triggerConfig.tag = tagPattern ? tagPattern : "*";
			}

			if (this.type() != "tag") {
				return undefined;
			}

			return this.triggerConfig.tag;
		};

		return Trigger;
	});

	angular
		.module("BitriseWorkflowEditor")
		.filter("displayNameForTriggerType", function() {
			return function(triggerType) {
				switch (triggerType) {
					case "push":
						return "<%= data[:strings][:triggers][:types][:push] %>";
					case "pull-request":
						return "<%= data[:strings][:triggers][:types][:pull_request] %>";
					case "tag":
						return "<%= data[:strings][:triggers][:types][:tag] %>";
				}
			};
		});
})();
