(function() {

"use strict";

angular.module("BitriseWorkflowEditor").controller("EnvVarsController", function($scope, communicationHelper, Variable) {

	var viewModel = this;

	viewModel.envVars;
	viewModel.selectedEnvVar = null;
	viewModel.editedEnvVar = null;
	viewModel.title;
	viewModel.notification;

	communicationHelper.readMessage("configureEnvVarsController").then(function(parameters) {
		switch (parameters.source) {
			case "secrets":
				viewModel.title = "<%= data[:strings][:env_var_editor][:secrets][:title] %>";
				viewModel.notification = "<%= data[:strings][:env_var_editor][:secrets][:notification] %>";
				
				break;
			case "app-env-vars":
				viewModel.title = "<%= data[:strings][:env_var_editor][:app_env_vars][:title] %>";
				viewModel.notification = "<%= data[:strings][:env_var_editor][:app_env_vars][:notification] %>";
				
				break;
			case "workflow-env-vars":
				viewModel.title = "<%= data[:strings][:env_var_editor][:workflow_env_vars][:title] %>";
				viewModel.envVars = parameters.envVars;
				
				break;
		}
	});

	viewModel.envVarSelected = function(envVar) {
		handleEnvVarEditFinishIfNeccessary();

		viewModel.selectedEnvVar = envVar;
		viewModel.editedEnvVar = angular.copy(viewModel.selectedEnvVar);
	};

	viewModel.addNewSelected = function() {
		viewModel.envVarSelected(new Variable());
	};

	viewModel.deleteEditedEnvVar = function() {
		var index = _.indexOf(viewModel.envVars, viewModel.selectedEnvVar);
		if (index != -1) {
			viewModel.envVars.splice(index, 1);
		}
		
		viewModel.selectedEnvVar = null;
		viewModel.editedEnvVar = null;
	};

	viewModel.envVarError = function(envVar) {
		if (viewModel.editedEnvVar.key.length == 0) {
			return new Error("<%= data[:strings][:env_var_editor][:warning_not_fully_specified]");
		}

		if (_.find(_.without(viewModel.envVars, envVar), {
			key: envVar.key
		})) {
			return new Error("<%= data[:strings][:env_var_editor][:warning_id_not_unique]");
		}

		return null;
	};

	function handleEnvVarEditFinishIfNeccessary() {
		if (!viewModel.editedEnvVar || viewModel.envVarError(viewModel.editedEnvVar)) {
			return;
		}

		var index = _.indexOf(viewModel.envVars, viewModel.selectedEnvVar);
		if (index != -1) {
			viewModel.envVars.splice(index, 1, viewModel.editedEnvVar);
		}
		else {
			viewModel.envVars.push(viewModel.editedEnvVar);
		}
	}

	$scope.$on("$destroy", function() {
		handleEnvVarEditFinishIfNeccessary();
	});

});

})();
