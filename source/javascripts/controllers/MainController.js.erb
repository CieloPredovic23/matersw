(function() {

"use strict";

angular.module("BitriseWorkflowEditor").controller("MainController", function($scope, $location, $q, $http, routeHelper, communicationHelper, bitriseSteplibService, Progress) {

	var viewModel = this;

	viewModel.mode = $location.search().mode;

	viewModel.menus = [{
		title: "<%= data.strings[:main][:menus][0] %>",
		path: "<%= data[:routes][:editor] %>",
		cssClass: "editor"
	}, {
		title: "<%= data.strings[:main][:menus][1] %>",
		path: "<%= data[:routes][:code_signing] %>",
		cssClass: "code-signing"
	}, {
		title: "<%= data.strings[:main][:menus][2] %>",
		path: "<%= data[:routes][:secrets] %>",
		cssClass: "secrets"
	}, {
		title: "<%= data.strings[:main][:menus][3] %>",
		path: "<%= data[:routes][:env_vars] %>",
		cssClass: "env-vars"
	}, {
		title: "<%= data.strings[:main][:menus][4] %>",
		path: "<%= data[:routes][:triggers] %>",
		cssClass: "triggers"
	}, {
		title: "<%= data.strings[:main][:menus][5] %>",
		path: "<%= data.routes.yml %>",
		cssClass: "yml"
	}];
	viewModel.selectedMenu;
	viewModel.menuProgress = new Progress();

	var appConfig;
	var savedAppConfig;

	viewModel.loadProgress = new Progress();

	function load() {
		viewModel.loadProgress.start("<%= data.strings.main.load_progress.loading %>");

		return $q.all([loadBitriseSteplib(), loadAppConfig()]).then(function() {
			viewModel.loadProgress.success();
		}, function(error) {
			viewModel.loadProgress.error(error);
		});
	}

	function loadBitriseSteplib() {
		return bitriseSteplibService.load().then(function() {
			communicationHelper.addMessage("bitriseSteplibLoaded", appConfig);
		});
	}

	function loadAppConfig() {
		return $q(function(resolve, reject) {
			switch (viewModel.mode) {
				case "website":
					var appSlug = $location.search().app_slug;
					var apiToken = $location.search().api_token;
					var requestURL = routeHelper.replacedRoute("<%= app_config_get_path %>", {
						app_slug: appSlug,
						api_token: apiToken
					});

					$http.get(requestURL).then(function(response) {
						appConfig = response.data;
						savedAppConfig = angular.copy(appConfig);

						resolve();
					}, function(response) {
						if (!response || !response.data) {
							reject(new Error("<%= data.strings.main.app_config.load_default_error %>"));

							return;
						}

						reject(new Error("<%= data.strings.main.app_config.load_error_prefix %> " + response.data));
					});

					break;
				default:
					resolve();
			}
		}).then(function() {
			communicationHelper.addMessage("appConfigLoaded", appConfig);
		});
	}

	$scope.$on("$routeChangeStart", function() {
		viewModel.menuProgress.start("Loading, wait a sec...");
	});

	$scope.$on("$routeChangeSuccess", function() {
		viewModel.menuProgress.success();
	});

	$scope.$on("$routeChangeError", function() {
		viewModel.menuProgress.error(new Error("Failed to load menu."));
	});

	viewModel.discardChanges = function() {
		appConfig = angular.copy(savedAppConfig);
	};

	viewModel.saveChanges = function() {
		// TODO: implement
		savedAppConfig = angular.copy(appConfig);
	};

	load();

});

})();
