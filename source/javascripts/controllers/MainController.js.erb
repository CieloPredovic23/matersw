(function() {

"use strict";

angular.module("BitriseWorkflowEditor").controller("MainController", function($scope, $q, requestService, Progress, Popup) {

	var viewModel = this;

	viewModel.selectedMenu;
	viewModel.menuProgress = new Progress();

	var appConfig;
	var savedAppConfig;
	var appConfigLoadDeferrer = $q.defer();

	viewModel.loadProgress = new Progress();

	function load() {
		viewModel.loadProgress.start("<%= data[:strings][:main][:load_progress][:loading] %>");

		try {
			requestService.configureMode();
		}
		catch (error) {
			viewModel.loadProgress.error(error);

			return;
		}

		viewModel.menus = _.compact([{
			title: "<%= data[:strings][:main][:menus][0] %>",
			path: "<%= endpoint_path(data[:routes][:endpoints][:editor]) %>",
			cssClass: "editor"
		}, (requestService.mode == "website" ? {
			title: "<%= data[:strings][:main][:menus][1] %>",
			path: "<%= endpoint_path(data[:routes][:endpoints][:code_signing]) %>",
			cssClass: "code-signing"
		} : null), {
			title: "<%= data[:strings][:main][:menus][2] %>",
			path: "<%= endpoint_path(data[:routes][:endpoints][:secrets]) %>",
			cssClass: "secrets"
		}, {
			title: "<%= data[:strings][:main][:menus][3] %>",
			path: "<%= endpoint_path(data[:routes][:endpoints][:app_env_vars]) %>",
			cssClass: "env-vars"
		}, {
			title: "<%= data[:strings][:main][:menus][4] %>",
			path: "<%= endpoint_path(data[:routes][:endpoints][:triggers]) %>",
			cssClass: "triggers"
		}, {
			title: "<%= data[:strings][:main][:menus][5] %>",
			path: "<%= endpoint_path(data[:routes][:endpoints][:yml]) %>",
			cssClass: "yml"
		}]);

		loadAppConfig().then(function() {
			viewModel.loadProgress.success();
		}, function(error) {
			viewModel.loadProgress.error(error);
		});
	}

	function loadAppConfig() {
		appConfigLoadDeferrer = $q.defer();

		return requestService.getAppConfig().then(function(_appConfig) {
			appConfig = _appConfig;
			savedAppConfig = angular.copy(appConfig);

			appConfigLoadDeferrer.resolve();
		});
	}

	$scope.$on("$routeChangeStart", function() {
		viewModel.menuProgress.start("Loading, wait a sec...");
	});

	$scope.$on("$routeChangeSuccess", function() {
		viewModel.menuProgress.success();
	});

	$scope.$on("$routeChangeError", function() {
		viewModel.menuProgress.error(new Error("Failed to load menu."));
	});

	viewModel.discardChanges = function() {
		appConfig = angular.copy(savedAppConfig);
		$scope.$broadcast("MainController::discardChanges", appConfig);
	};

	viewModel.saveChanges = function() {
		viewModel.loadProgress.start("<%= data[:strings][:main][:load_progress][:saving] %>");

		$scope.$broadcast("MainController::requestingAppConfigUpdateBeforeSave");

		requestService.postAppConfig(appConfig).then(requestService.getAppConfig).then(function(_appConfig) {
			appConfig = _appConfig;
			savedAppConfig = angular.copy(appConfig);

			viewModel.loadProgress.success();
			$scope.$broadcast("MainController::appConfigLoaded", appConfig);
		}, function(error) {
			viewModel.loadProgress.error(error);
		});
	};

	$scope.$on("MainController::menuContentIsLoadedAndReady", function() {
		appConfigLoadDeferrer.promise.then(function() {
			$scope.$broadcast("MainController::appConfigLoaded", appConfig);
		});
	});

	load();

});

})();
