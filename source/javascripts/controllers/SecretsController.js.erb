(function() {

"use strict";

angular.module("BitriseWorkflowEditor").controller("SecretsController", function($scope, $rootScope, $q, requestService, Progress, Variable) {

	var viewModel = this;

	viewModel.secrets;
	var savedSecrets;
	var envVarEditorLoadedAndReadyDeferred = $q.defer();

	viewModel.loadSecretsProgress = new Progress();
	viewModel.loadTemplateProgress = new Progress();

	function loadSecrets() {
		viewModel.loadSecretsProgress.start("<%= data[:strings][:secrets][:loading] %>");

		requestService.getSecrets().then(function(secretConfigs) {
			minimizeSecretConfigs(secretConfigs);
			
			viewModel.secrets = _.map(secretConfigs, function(aSecretConfig) {
				return new Variable(aSecretConfig);
			});
			savedSecrets = angular.copy(viewModel.secrets);

			viewModel.loadSecretsProgress.success();
			envVarEditorLoadedAndReadyDeferred.promise.then(configureEnvVarsController);
		}, function(error) {
			viewModel.loadSecretsProgress.error(error);
		});
	}

	$scope.$on("$destroy", $rootScope.$on("SecretsController::saveSecrets", function(event, resolve, reject) {
		requestService.postSecrets(viewModel.secrets).then(function() {
			resolve();

			loadSecrets();
		}, function(error) {
			reject(error)
		});
	}));

	function minimizeSecretConfigs(secretConfigs) {
		_.each(secretConfigs, function(aSecretConfig) {
			if (aSecretConfig.opts && _.isEmpty(aSecretConfig.opts)) {
				delete aSecretConfig["opts"];
			}
		});
	}

	$scope.$on("$destroy", $rootScope.$on("MainController::discardChanges", function() {
		viewModel.secrets = angular.copy(savedSecrets);
		envVarEditorLoadedAndReadyDeferred.promise.then(configureEnvVarsController);
	}));

	$scope.$on("$destroy", $rootScope.$on("EnvVarsController::loadedAndReady", function() {
		envVarEditorLoadedAndReadyDeferred.resolve();
	}));

	function configureEnvVarsController() {
		$rootScope.$emit("EnvVarsController::configure", {
			source: "secrets",
			envVars: viewModel.secrets
		});
	}

	loadSecrets();

	viewModel.loadTemplateProgress.start("<%= data[:strings][:env_var_editor][:template_load_inprogress] %>");

	$rootScope.$emit("MainController::menuContentIsLoadedAndReady");

});

})();
