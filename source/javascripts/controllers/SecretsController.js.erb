(function() {

"use strict";

angular.module("BitriseWorkflowEditor").controller("SecretsController", function($scope, $q, requestService, Progress, Variable) {

	var viewModel = this;

	viewModel.secrets;
	var savedSecrets;
	var secretsLoadedDeferred = $q.defer();

	viewModel.loadSecretsProgress = new Progress();
	viewModel.loadTemplateProgress = new Progress();

	function loadSecrets() {
		viewModel.loadSecretsProgress.start("<%= data[:strings][:secrets][:loading] %>");
		secretsLoadedDeferred = $q.defer();

		requestService.getSecrets().then(function(secretConfigs) {
			viewModel.secrets = _.map(secretConfigs, Variable.createFromVariableConfig);
			savedSecrets = angular.copy(viewModel.secrets);

			viewModel.loadSecretsProgress.success();
			secretsLoadedDeferred.resolve();
		}, function(error) {
			viewModel.loadSecretsProgress.error(error);
		});
	}

	$scope.$on("EnvVarsController::loadedAndReady", function() {
		secretsLoadedDeferred.promise.then(configureEnvVarsController);
	});

	function configureEnvVarsController() {
		$scope.$broadcast("EnvVarsController::configure", {
			source: "secrets",
			envVars: viewModel.secrets
		});
	}

	$scope.$on("MainController::discardChanges", function() {
		viewModel.secrets = angular.copy(savedSecrets);
		configureEnvVarsController();
	});

	loadSecrets();

	viewModel.loadTemplateProgress.start("<%= data[:strings][:env_var_editor][:template_load_inprogress] %>");

});

})();
