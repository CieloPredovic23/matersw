(function() {

"use strict";

angular.module("BitriseWorkflowEditor").controller("TriggersController", function(communicationHelper, Trigger, Workflow) {

	var viewModel = this;

	viewModel.workflows;
	viewModel.triggers;
	viewModel.selectedTrigger = null;
	viewModel.editedTrigger;
	viewModel.newTriggerIndex;

	communicationHelper.readMessage("appConfigLoaded").then(function(appConfig) {
		viewModel.workflows = _.map(appConfig.workflows, function(aWorkflowConfig, aWorkflowID) {
			return new Workflow(aWorkflowID);
		});

		viewModel.triggers = _.map(appConfig.trigger_map, function(triggerConfig) {
			var trigger = Trigger.createFromTriggerConfig(triggerConfig, viewModel.workflows);

			return trigger;
		});
	});

	viewModel.triggerSelected = function(trigger) {
		viewModel.newTriggerIndex = undefined;
		viewModel.selectedTrigger = trigger;
		viewModel.editedTrigger = viewModel.selectedTrigger ? angular.copy(viewModel.selectedTrigger) : undefined;
	};

	viewModel.deleteTriggerSelected = function(trigger) {
		var index = _.indexOf(viewModel.triggers, trigger);
		viewModel.triggers.splice(index, 1);

		viewModel.triggerSelected(null);
	};

	viewModel.addTriggerSelectedAtIndex = function(index) {
		var newTrigger = new Trigger();
		newTrigger.pushBranchPattern = "*";

		viewModel.editedTrigger = newTrigger;
		viewModel.newTriggerIndex = index;
	};

	viewModel.triggerTypeChanged = function() {
		viewModel.editedTrigger.pushBranchPattern = undefined;
		viewModel.editedTrigger.pullRequestSourceBranchPattern = undefined;
		viewModel.editedTrigger.pullRequestTargetBranchPattern = undefined;
		viewModel.editedTrigger.tagPattern = undefined;

		switch (viewModel.editedTrigger.type) {
			case "push":
				viewModel.editedTrigger.pushBranchPattern = "";

				break;
			case "pull-request":
				viewModel.editedTrigger.pullRequestSourceBranchPattern = "";
				viewModel.editedTrigger.pullRequestTargetBranchPattern = "";

				break;
			case "tag":
				viewModel.editedTrigger.tagPattern = "";

				break;
		}
	};

	viewModel.triggerEditFinished = function() {
		if (viewModel.selectedTrigger) {
			var index = _.indexOf(viewModel.triggers, viewModel.selectedTrigger);
			viewModel.triggers.splice(index, 1, viewModel.editedTrigger);
		}
		else {
			viewModel.triggers.splice(viewModel.newTriggerIndex, 0, viewModel.editedTrigger);
		}

		viewModel.triggerSelected(null);
	};

	viewModel.triggerEditCancelled = function() {
		viewModel.triggerSelected(null);
	};

});

})();
