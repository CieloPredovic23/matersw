(function() {

"use strict";

angular.module("BitriseWorkflowEditor").controller("CodeSigningController", function($q, $cookies, appService, Progress) {

	var viewModel = this;

	viewModel.shouldShowCodeSigningHints;
	viewModel.isCodeSigningHintsOpen;
	viewModel.loadProgress = new Progress();

	function load() {
		viewModel.loadProgress.start("<%= data[:strings][:code_signing][:available_project_types_load] %>");

		appService.getAvailableProjectTypes().then(function() {
			viewModel.shouldShowCodeSigningHints = viewModel.areAnyOfTheProjectTypesAvailable(["ios", "osx", "macos", "xamarin"]);

			viewModel.isCodeSigningHintsOpen = $cookies.get("code_signing_hints_hidden") == "true";

			viewModel.loadProgress.success();
		}, function(error) {
			viewModel.loadProgress.error(error);
		});
	}

	viewModel.areAnyOfTheProjectTypesAvailable = function(projectTypes) {
		return _.intersection(projectTypes, appService.availableProjectTypes).length > 0;
	};

	viewModel.toggleCodeSigningHints = function() {
		viewModel.isCodeSigningHintsOpen = !viewModel.isCodeSigningHintsOpen;

		$cookies.put("code_signing_hints_hidden", viewModel.isCodeSigningHintsOpen, {
			expires: new Date(new Date().setFullYear(new Date().getFullYear() + 1))
		});
	};

	load();

});

})();
