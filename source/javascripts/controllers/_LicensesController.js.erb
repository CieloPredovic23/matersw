(function() {
  "use strict";

  angular
    .module("BitriseWorkflowEditor")
    .controller("LicensesController", function(
      appService,
      requestService,
      Workflow,
      $scope,
      $rootScope
    ) {
      var viewModel = this;

      $scope.licensePoolsUrl = "/workspaces/" + appService.appDetails.ownerData.slug + "/settings/integrations?tab=license-pools";

      $scope.licenses = [
        {
          id: null,
          name: "(No license pool selected)"
        }
      ];

      requestService.getLicensePools(appService.publicApi, appService.appDetails.ownerData.slug).then(
        function(response) {
          var pools = response.licensePools;
          if (pools.length > 0) {
            _.each(pools, function(pool) {
              $scope.licenses.push(pool);
            });
          } else {
            $scope.licenses = [];
          }
          $scope.$apply();
        },
        function(error) {
          $scope.licenses = [];
          console.log(error);
        }
      );

      viewModel.workflowLicenseFactory = function(workflow) {

        return function(licensePoolOption) {
          if (licensePoolOption !== undefined) {
            workflow.licensePoolId(licensePoolOption.id);
          }

          var id = workflow.licensePoolId();

          if (id) {
            var licenseOption = $scope.licenses.find((item) => {
              if (item.id === id) {
                return true;
              }
            });

            return licenseOption;
          }

          return $scope.licenses[0];
        };
      };

      $rootScope.$on("MainController::changesDiscarded", function() {
        viewModel.workflows = mapWorkflows();
      });

      function mapWorkflows() {
        return _.map(appService.appConfig.workflows, function(
          aWorkflowConfig,
          workflowID
        ) {
          return new Workflow(workflowID, aWorkflowConfig);
        });
      }

      // Setup workflows
      viewModel.workflows = mapWorkflows();
    });

})();
