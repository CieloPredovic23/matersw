(function() {
	"use strict";

	angular
		.module("BitriseWorkflowEditor")
		.service("dateService", function($filter) {
			var dateService = {
				defaultSaveDelayDurationInMilliseconds: parseInt(
					"<%= data[:constants][:default_save_delay_in_milliseconds] %>"
				)
			};

			dateService.datetimeValueFromDate = function(date) {
				if (!date) {
					return date;
				}

				return $filter("date")(date, "yyyy-MM-dd HH:mm:ss");
			};

			dateService.ISODateStringFromString = function(string) {
				if (string === null || string === undefined) {
					return string;
				}

				if (!string) {
					return null;
				}

				var newString = null;
				var stringArray = string.split(" ");
				if (stringArray.length > 1) {
					newString = stringArray[0] + "T" + stringArray[1] + "Z";
				} else if (stringArray.length === 1) {
					newString = stringArray[0];
				}
				return newString;
			};

			dateService.dateFromString = function(string) {
				var dateString = dateService.ISODateStringFromString(string);

				if (!dateString) {
					return dateString;
				}

				return new Date(dateString);
			};

			dateService.isDateExpired = function(date) {
				if (!date) {
					return undefined;
				}

				var now = new Date();

				return date < now;
			};

			dateService.toLocaleMonthDayDateString = function(string) {
				const date = new Date(string);
				const month = date.toLocaleDateString('en-US', { month: 'short' });
				const day = date.toLocaleDateString('en-US', { day: '2-digit' });

				return day + 'th of ' + month;
			};

			dateService.defaultSaveDelayDurationInMilliseconds;

			return dateService;
		});

	angular
		.module("BitriseWorkflowEditor")
		.filter("datetimeValue", function(dateService) {
			return dateService.datetimeValueFromDate;
		});
})();
