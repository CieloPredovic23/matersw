(function() {

"use strict";

angular.module("BitriseWorkflowEditor").service("stringService", function() {

	var stringService = {};

	stringService.stringReplacedWithParameters = function(string, parameters) {
		_.each(parameters, function(aValue, aKey) {
			var regexpForParameter = new RegExp("([^\<]*)\<" + aKey + "\>(.*)")

			string = string.replace(regexpForParameter, "$1" + aValue + "$2");
		});

		return string;
	};

	stringService.joinedStringsWithJoiner = function(strings, joiner, shouldLeaveSpaceAfterJoiner) {
		var joinedString = "";

		if (joiner === undefined) {
			joiner = "";
		}

		if (shouldLeaveSpaceAfterJoiner === undefined) {
			if (joiner == ",") {
				shouldLeaveSpaceAfterJoiner = true;
			}
		}

		_.each(strings, function(aString, index) {
			if (index > 0) {
				joinedString += joiner;

				if (shouldLeaveSpaceAfterJoiner) {
					joinedString += " ";
				}
			}

			joinedString += aString;
		});

		return joinedString;
	};

	stringService.isStringMatchingTerm = function(string, term) {
		if (string === undefined || term === undefined) {
			return undefined
		}

		if (term.length == 0) {
			return true;
		}

		return string.toLowerCase().indexOf(term.toLowerCase()) != -1;
	};

	return stringService;

});

})();
