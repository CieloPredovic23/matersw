@import "default";
@import "constants";

.notification, .progress-indicator {
	$padding: 10px;

	position: relative;
	$height: 12 * $grid;
	$line-height: 6 * $grid;
	$icon-size: 6 * $grid;
	$border-width: 1px;
	border: $border-width solid;
	@include border-radius($def-box-radius);
	padding: (($height - $line-height) / 2 - $border-width) (4 * $grid - 2 * $border-width);
	line-height: $line-height;
	font-size: 16px;
	font-weight: 400;

	&:not(.no-icon) {
		$icon-reserved_size: 20px;

		padding-left: $padding + $icon-reserved_size + $padding;

		&:before {
			content: "";
			@include position(absolute, 50%, null, null, $padding);
			@include size(6 * $grid);
			margin-top: -$icon-size / 2;
			background-position: left center;
			background-size: contain;
			background-repeat: no-repeat;
		}
	}

	a {
		font-weight: 600;
		color: inherit;
	}

	a:not(:hover):not(:focus) {
		text-decoration: none;
	}
}

@mixin notification_styling($color, $background_color, $svg_content, $include_border: false) {
	border-color: if($include_border, $color, $background_color);
	color: $color;
	background-color: $background_color;

	&:before {
		background-image: background_image_from_svg_content('<%= svg("notification/#{ $svg_content }") %>');
	}
}

.notification {
	@include notification_styling($def-blue-shade, $def-blue-light, 'lightbulb', true);
}

.progress-indicator.in-progress {
	@include notification_styling($def-violet_blue, $def-light-grape, 'spinner', true);
}

.notification.error, .progress-indicator.error {
	@include notification_styling($def-danger, $def-danger-light, 'cross', true);
}

.notification.success, .progress-indicator.success {
	@include notification_styling($def-green, $def-green-light, 'check', true);
}

.notification.warning {
	@include notification_styling($def-yellow-5, $def-yellow-1, 'warning', true);
}
