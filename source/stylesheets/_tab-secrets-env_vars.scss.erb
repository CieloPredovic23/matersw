@import "default";
@import "constants";

.tab-secrets, .tab-env-vars {

	section {
		margin-bottom: 20px;

		p.notification.source-specific-notification {
			@include margin-y(0);
			@include border-x(none);
			@include border-radius(0);
			padding: $cardo-verticalpadding $cardo-horizontalpadding;
		}

		article {
			$border: 1px solid $def-mediumlightgrey;
			$first_column-width: 330px;
			$input-height: 36px;

			padding: 0;
			background-color: white;

			ul.env-vars {
				@include margin-y(0);
				padding-left: 0;
				list-style: none;

				li {
					border-bottom: $border;
					padding: $cardo-verticalpadding $cardo-horizontalpadding;
					background-color: white;
					cursor: move;

					.key-value-delete {
						$input-horizontalpadding: 14px;

						@include display-flex;
						@include align-items(center);
						margin-bottom: 12px;

						&:before {
							content: "=";
							@include order(2);
							@include margin-x(20px);
							font-size: 16px;
							font-weight: 900;
						}

						input.key, textarea.value {
							padding: 0px $input-horizontalpadding;
							height: $input-height;
							font-size: 14px;
							font-weight: 200;
							@include SourceCodeProWithFallback;
						}

						input.key {
							$background_width: 8px;
							$background_reservedwidth: 30px;

							@include order(1);
							@include flex-shrink(0);
							@include box-sizing(border-box);
							width: $first_column-width;
							@include border-radius($def-radius);
							padding-left: $background_reservedwidth + $input-horizontalpadding;
							background-size: $background_width auto, $background_reservedwidth 100%;
							background-position: left #{($background_reservedwidth - $background_width) / 2} center, left center;
							background-repeat: no-repeat;

							@mixin input_key_styling($is_danger) {
								$color: if($is_danger, $def-danger, $def-purple);

								border: 1px solid $color;
								color: $color;
								background-image: background_image_from_svg_content_with_attributes('<%= svg("env_var_prefix") %>', (
									fill: white
								)), background_image_from_svg_content('<svg xmlns="http://www.w3.org/2000/svg"><rect width="#{ $background_reservedwidth }" height="#{ $input-height }" fill="#{ rgba($color, 0.99) }"></rect></svg>');
							}

							&.ng-valid, &.ng-pristine {
								@include input_key_styling(false);
							}

							&.ng-invalid:not(.ng-pristine) {
								@include input_key_styling(true);
							}
						}

						textarea.value {
							@include order(3);
							@include flex-grow(1);
							@include align-self(stretch);
							@include box-sizing(border-box);
							border: 1px solid $def-mediumlightgrey;
							@include border-radius($def-radius);
							@include padding-y(8px);
						}

						button.delete-env-var {
							@include order(4);
							@include flex-shrink(0);
						}
					}

					.is-expand {
						@include display-flex;
						@include align-items(center);

						&:not(:last-child) {
							margin-bottom: 12px;
						}

						.checkbox + label {
							margin-left: 8px;
						}

						label {
							font-size: 12px;
							font-weight: 200;
						}
					}

					p.notification {
						@include margin-y(0);
					}
				}

				li.dragged-element {
					z-index: $zindex-dragged_element;
					border-top: $border;
				}
			}

			ul.env-vars.drag-in-progress {

				* {
					@include user-select(none);
				}
			}

			button.add {
				width: $first_column-width;
				margin: $cardo-verticalpadding $cardo-horizontalpadding;
			}

			@include media-above-inclusive-mid {

				ul.env-vars {

					li {

						.key-value-delete {

							button.delete-env-var {
								@include size(22px);
								margin: 6px 12px;
								margin-right: 0;
								padding: 0;

								svg {
									@include position(relative, -1px);
									@include size(8px);
								}
							}

							button.delete-env-var:not(:focus):not(:hover) {
								opacity: 0.5;
							}
						}
					}
				}
			}

			@include media-below-mid {
				@include display-flex;
				@include flex-direction(column);

				ul.env-vars {

					li {

						.key-value-delete {
							@include flex-direction(column);

							input.key {
								@include align-self(stretch);
							}

							&:before {
								@include margin-y(10px);
								margin-left: $first_column-width / 2;
								margin-right: auto;
							}

							textarea.value {
								width: $first_column-width;
							}

							button.delete-env-var {
								@include align-self(stretch);
								@include size($first_column-width, auto);
								margin-top: 12px;
								@include margin-x(0);

								svg {
									display: none;
								}

								&:after {
									content: "<%= data[:strings][:env_vars][:delete_env_var] %>";
								}
							}
						}
					}
				}
			}

			@include media-below-small {

				ul.env-vars {

					li {

						.key-value-delete {

							input.key {
								width: auto;
							}

							textarea.value {
								width: auto;
							}

							&:before {
								@include margin-x(0);
							}

							button.delete-env-var {
								width: auto;
							}
						}
					}
				}

				button.add {
					@include flex-grow(1);
					width: auto;
				}
			}
		}
	}
}
