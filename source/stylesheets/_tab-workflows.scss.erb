@import "default";
@import "constants";

section.manage-workflows {
	$button-spacing: 8px;

	@include flex-shrink(0);
	@include display-flex;
	@include flex-wrap(wrap);
	padding: #{$main-verticalpadding - ($button-spacing / 2)} #{$main-horizontalpadding - ($button-spacing / 2)};
	background-color: white;

	&:not(.ninja) > * {
		margin: $button-spacing / 2;
	}

	.workflow-selector {
		@include display-flex;
		position: relative;

		.selected-workflow {
			$color: $def-mediumdarkgrey;

			@include display-flex;
			@include box-sizing(border-box);
			width: 100%;
			border: 1px solid $color;
			@include border-radius($def-radius);
			overflow: hidden;
			font-size: 12px;
			background-color: $color;

			&:before {
				content: "<%= data[:strings][:workflows][:select_workflow_placeholder] %>";
				@include flex-shrink(0);
				@include align-self(center);
				@include padding-x(15px);
				text-align: center;
				font-weight: 200;
				text-transform: uppercase;
				color: white;
			}

			button {
				@include flex-grow(1);
				width: 160px;
				@include border-left-radius(0);
				border: none;
				@include ellipsis-oneliner;
				color: $color;

				@include media-below-big {
					width: 180px;
				}
			}
		}

		ul {
			$border: 1px solid $def-lightgrey;
			$li_padding: 12px;
			$li_fontsize: 14px;

			@include position(absolute, 100%, 0);
			z-index: $zindex-workflow_selector;
			width: 100%;
			margin-top: 10px;
			margin-bottom: 0;
			border: $border;
			@include border-radius($def-radius);
			padding-left: 0;
			overflow: hidden;
			list-style: none;
			@include box-shadow(0px 0px 10px 0px rgba(0, 0, 0, 0.2));

			li {
				font-size: $li_fontsize;
				font-weight: 200;

				&.selected .workflow svg, &:not(.selected) .workflow button.select-workflow:before {
					@include flex-shrink(0);
					@include size(12px, 11px);
					margin-right: 10px;
				}

				&.selected .workflow {
					@include display-flex;
					@include align-items(center);
					padding: $li_padding;
					background-color: $def-green;
					color: white;

					svg {
						fill: white;
					}

					span.workflow-id {
						@include flex-grow(1);
						@include ellipsis-oneliner;
					}

					button.select-workflow {
						display: none;
					}

					button.rename-workflow {
						margin-left: 6px;
						text-align: left;
						font-size: 10px;
						text-transform: uppercase;

						&:before {
							content: "Rename";
						}
					}

					button.rename-workflow:hover, button.rename-workflow:focus {
						text-decoration: underline;
					}
				}

				&:not(.selected) .workflow {
					@include display-flex;

					svg {
						display: none;
					}

					span.workflow-id {
						display: none;
					}

					button.select-workflow {
						width: 100%;
						padding: $li_padding;
						text-align: left;
						@include ellipsis-oneliner;
						background-color: white;
						@include transition(color $def-transition_duration, background-color $def-transition_duration);

						&:before {
							content: "â—‹";
							display: inline-block;
							text-align: center;
						}
					}

					button.select-workflow:hover, button.select-workflow:focus {
						background-color: $def-green;
						color: white;
					}

					button.rename-workflow {
						display: none;
					}
				}
			}

			li:not(:last-child) {
				border-bottom: $border;
			}

			li:not(.rename-in-progress) {

				form.workflow-rename {
					display: none;
				}
			}

			li.rename-in-progress {

				.workflow {
					display: none;
				}

				form.workflow-rename {
					@include display-flex;

					input.name {
						@include flex-grow(1);
						margin: 0;
						border: none;
						padding: $li_padding;
						font-size: $li_fontsize;
						color: $def-mediumdarkgrey;
					}

					input.ok {
						width: 12px;
						@include box-sizing(content-box);
						background-image: background_image_from_svg_content_with_attributes('<%= svg("check") %>', (
							fill: rgba(white, 0.99)
						)), none;
						background-size: 100% auto;
						background-position: center;
						background-origin: content-box;
						background-repeat: no-repeat;
					}
				}
			}
		}

		ul.ng-animate {
			@include transition(opacity $def-transition_duration);
		}

		ul.ng-hide {
			opacity: 0;
		}

		@include media-below(580px) {
			width: 100%;
		}
	}

	button.manage-button {
		font-size: 12px;
	}

	button.add-workflow, button.add-before-run-workflow, button.add-after-run-workflow, button.rearrange, button.delete-workflow {
		@include flex-grow(1);

		svg:last-of-type {
			margin-right: 8px;
		}

		@include media-below-mid {

			svg:last-of-type {
				margin-right: 0;
			}

			span {
				display: none;
			}
		}
	}

	button.add-workflow {

		svg {
			@include size(10px);
		}
	}

	button.add-before-run-workflow {

		svg {
			@include size(10px, 10px);
		}
	}

	button.add-after-run-workflow {

		svg {
			@include size(10px, 10px);
		}
	}

	button.rearrange {

		svg {
			@include size(8px, 13px);
		}

		svg:first-of-type {
			@include transform(rotate(180deg));
		}
	}

	button.delete-workflow {

		svg {
			@include size(8px);
		}
	}

	@include media-below-mid {
		@include padding-x($main-horizontalpadding_small - ($button-spacing / 2));
	}
}

header.sticky section.manage-workflows {
	@include padding-y(10px);
}

.tab-workflows {
	@include flex-grow(1);
	@include flex-shrink(0);
	@include display-flex;
	@include flex-direction(column);

	p.progress-indicator {
		margin: $main-verticalpadding $main-horizontalpadding;

		@include media-below-mid {
			@include margin-x($main-horizontalpadding_small);
		}
	}

	.content {
		@include flex-grow(1);
		@include flex-shrink(0);
		@include display-flex;
		@include flex-direction(column);

		.workflows {
			$spacing: 8px;
			$icon-size: 52px;
			$icon-size_small: 36px;
			$steptitle-width: 280px;
			$steptitle-width_small: 220px;

			@include flex-grow(1);
			@include flex-shrink(0);
			@include display-flex;
			@include flex-direction(column);
			background-color: $def-ultralightgrey;

			section.workflow {
				@include flex-shrink(0);
				border-top: 1px dashed $def-grey;
				@include padding-x($main-horizontalpadding);
				@include transition(background-color $def-transition_duration);

				&:last-child {
					@include flex-grow(1);
				}

				header.workflow-header {
					@include display-flex;
					margin-bottom: $spacing;

					.header-info {
						@include flex-grow(1);
						@include align-self(flex-end);
						@include display-flex;
						@include align-items(center);
						margin-left: $spacing;

						h2 {
							$color: $def-mediumdarkgrey;

							@include flex-grow(1);
							position: relative;
							@include display-flex;
							@include align-items(center);
							@include box-sizing(border-box);
							max-width: $steptitle-width;
							@include margin-y(0);
							border: 1px solid $color;
							@include border-radius($def-radius);
							overflow: hidden;
							font-size: 14px;
							font-weight: 300;
							color: $color;

							button.edit {
								@include position(absolute, 0, 0);
								@include size(100%);

								&:hover ~ span.icons-and-name, &:focus ~ span.icons-and-name {
									background-color: white;

									span.edit-icon {
										opacity: 1;
									}
								}
							}

							span.icons-and-name {
								@include flex-grow(1);
								@include display-flex;
								padding: 6px 8px;
								@include ellipsis-oneliner;
								
								background-color: $def-ultralightgrey;
								@include transition(background-color $def-transition_duration);

								span.icon {
									display: inline-block;
									margin-right: 6px;

									svg {
										@include size(12px, 11px);
										fill: $color;
									}
								}

								span.workflow-name {
									@include flex-grow(1);
									@include ellipsis-oneliner;
								}

								span.edit-icon {
									margin-left: 6px;
									opacity: 0;
									@include transition(opacity $def-transition_duration);

									svg {
										@include size(12px, 10px);
										fill: $color;
									}
								}
							}

							button.remove {
								position: relative;
								@include flex-shrink(0);
								@include align-self(stretch);
								margin-left: auto;
								@include padding-x(12px);
								background-color: $color;
								@include transition(background-color $def-transition_duration);

								svg {
									@include size(8px);
									fill: white;
								}
							}

							button.remove:focus, button.remove:hover {
								background-color: $def-darkgrey;
							}
						}

						.stack {
							@include display-flex;
							@include align-items(center);
							margin-left: $spacing;

							.icon {
								@include flex-shrink(0);
								@include margin-x(15px);

								svg {
									display: block;
									@include size(16px);
									fill: $def-darkgrey;
								}
							}

							.name {
								font-size: 15px;
								font-weight: 500;
								color: $def-darkgrey;
							}

							.default-badge {
								$badge-height: 14px;

								@include box-sizing(border-box);
								line-height: $badge-height;
								margin-left: 12px;
								@include border-radius($badge-height / 2);
								@include padding-x(5px);
								font-size: 8px;
								letter-spacing: 0.5px;
								font-weight: 300;
								text-transform: uppercase;
								color: white;
								background-color: #029dd8;
							}
						}
					}
				}

				article {
					$add_step-size: 20px;
					$add_step-iconsize: 12px;
					$add_step-borderwidth: 1px;

					@include display-flex;
					@include align-items(flex-start);

					ul.steps {
						@include align-self(stretch);
						@include display-flex;
						@include flex-direction(column);
						@include margin-y(0);
						margin-right: $spacing;
						padding-left: 0;
						list-style: none;
						@include flex-shrink(0);
						@include transition(opacity $def-transition_duration);

						ul {
							list-style: none;
							padding-left: 0;
						}

						li {
							width: 100%;
							margin-bottom: $spacing;

							button.add-step {
								$transition_duration: $def-transition_duration;

								display: block;
								width: $icon-size;
								margin-bottom: $spacing;
								border: $add_step-borderwidth solid $def-darkgrey;
								@include border-radius($def-radius);
								@include padding-y(($add_step-size - $add_step-iconsize) / 2 - $add_step-borderwidth);
								line-height: $add_step-iconsize;
								@include transition(margin-bottom $transition_duration, border-width $transition_duration, padding-top $transition_duration, padding-bottom $transition_duration, background-color $transition_duration);

								&:before {
									content: "+";
									display: block;
									height: $add_step-iconsize;
									font-size: 14px;
									color: $def-darkgrey;
								}
							}

							button.add-step:hover, button.add-step:focus {
								color: white;
								background-color: $def-lightgrey;
							}

							button.add-step:disabled {
								margin-bottom: 0;
								border-width: 0;
								@include padding-y(0);

								&:before {
									display: none;
								}
							}

							button.add-step:last-child {
								margin-right: $spacing + $steptitle-width;
							}

							.step-actions {
								position: relative;

								button.step {
									position: relative;
									display: block;
									text-align: left;

									span.icon {
										@include position(absolute, 0, null, null, 0);
										@include box-sizing(border-box);
										@include size($icon-size);
										border: 1px solid $def-lightgrey;
										@include border-radius($def-radius);
										background-size: cover;
									}

									span.info {
										@include display-flex;
										@include flex-direction(column);
										@include justify-content(center);
										@include align-items(flex-start);
										@include box-sizing(border-box);
										@include size($steptitle-width, $icon-size);
										margin-left: $icon-size + $spacing;
										border: 1px solid $def-mediumlightgrey;
										@include border-radius($def-radius);
										@include padding-x(20px);
										@include transition(border-color $def-transition_duration, color $def-transition_duration, background-color $def-transition_duration);
										background-color: $def-verylightgrey;

										strong {
											@include display-flex;
											@include align-items(center);
											max-width: 100%;
											font-size: 14px;
											font-weight: 400;

											span.title {
												@include flex-shrink(1);
												@include ellipsis-oneliner;
											}

											span.verified, span.deprecated {
												margin-left: 5px;

												svg {
													@include size(10px);
												}
											}
										}

										em.version {
											display: block;
											@include ellipsis-oneliner;
											font-size: 12px;
											font-style: normal;
											font-weight: 200;
											color: $def-grey;
										}
									}
								}

								button.update-step {
									$size: 14px;

									@include position(absolute, 0, null, null, 52px);
									@include size($size);
									margin-top: (- $size / 2) + 3px;
									margin-left: (- $size / 2) - 3px;
									@include border-radius($size / 2);
									background-color: $def-danger;
									@include transition(background-color $def-transition_duration);

									&:hover, &:focus {
										background-color: $def-danger-shade;
									}
								}
							}
						}

						li .step-actions button.step:hover span.info, li .step-actions button.step:focus span.info {
							background-color: $def-mediumlightgrey;
						}

						li.selected .step-actions button.step span.info {
							$color: $def-darkgrey;

							border-color: $color;
							color: white;
							background-color: $color;
						}
					}

					ul.drag-in-progress li, ul.drag-in-progress + li {

						button.add-step {
							visibility: hidden;
						}
					}

					ul.drag-in-progress li.dragged-element {
						z-index: $zindex-dragged_element;
					}

					aside.selected-step, aside[workflow-description] {
						@include flex-grow(1);
						margin-top: $add_step-size + $spacing;
						margin-bottom: 50px;
					}

					aside.selected-step {
						$trashicon_width: 17px;
						$leftpadding: 25px;
						$rightpadding: ($icon-size - $trashicon_width) / 2 + 3px;
						$horizontalpadding_small: 12px;

						overflow: hidden;

						&:not(.ninja) > * {
							margin-top: 0;
							margin-bottom: 15px;
						}

						.step-details {
							$border: 1px solid $def-mediumlightgrey;

							@include box-sizing(border-box);
							border: $border;
							@include border-radius($def-radius);
							overflow: hidden;
							background-color: white;

							header.manage-step {
								@include display-flex;
								@include box-sizing(border-box);
								height: $icon-size;
								border-bottom: $border;
								background-color: $def-verylightgrey;

								.title {
									@include flex-grow(1);
									@include display-flex;
									padding-left: $leftpadding;
									padding-right: $rightpadding;
									overflow: hidden;

									button.rename {
										$renamebutton-horizontalpadding: 6px;

										@include align-self(center);
										border: 1px solid transparent;
										@include border-radius($def-radius);
										margin-left: -$renamebutton-horizontalpadding;
										padding: 4px $renamebutton-horizontalpadding;
										text-align: left;
										@include ellipsis-oneliner;
										font-size: 14px;
										font-weight: 400;
										color: $def-darkgrey;
										@include transition(border-color $def-transition_duration);
									}

									button.rename:hover, button.rename:focus {
										border-color: $def-grey;
									}

									span.verified, span.community-created, span.deprecated {
										@include flex-shrink(0);
										@include align-self(center);

										&:not(:first-of-type) {
											margin-left: 4px;
										}

										svg {
											display: block;
											@include size(17px);
										}
									}
								}

								.rename-title {
									@include flex-grow(1);
									@include display-flex;
									@include margin-y(0);
									@include padding-y(6px);
									padding-left: $leftpadding;
									padding-right: $rightpadding;

									input {
										width: 60%;
										border: 1px solid $def-lightgrey;
										@include border-radius($def-radius);
										@include padding-x(8px);
										font-size: 14px;
									}

									button.ok {
										margin-left: 6px;

										svg {
											@include size(12px, 11px);
										}
									}
								}

								aside {
									@include flex-shrink(0);
									@include display-flex;

									button, a {
										$transition_duration: $def-transition_duration;

										@include flex-shrink(0);
										@include box-sizing(border-box);
										width: $icon-size;
										line-height: $icon-size;
										border-left: $border;
										@include transition(background-color $transition_duration);

										svg {
											fill: $def-grey;
											@include transition(fill $transition_duration);
										}
									}

									button.clone {
										position: relative;

										.popover {
											top: 70%;
											left: 32%;
											width: 45px;
										}

										svg {
											@include position(relative, 2px);
											@include size(18px, 18px);
										}
									}

									a.source {
										position: relative;
										text-align: center;

										.popover {
											top: 70%;
											left: 32%;
											width: 32px;
										}

										svg {
											@include position(relative, 2px);
											@include size(19px, 19px);
										}
									}

									button.delete svg {
										@include position(relative, 1px);
										@include size($trashicon_width, 18px);
									}

									button.clone:focus, button.clone:hover, a.source:focus, a.source:hover {

										svg {
											fill: $def-verydarkgrey;
										}
									}

									button.delete:focus, button.delete:hover {
										background-color: $def-danger-light;

										svg {
											fill: $def-danger;
										}
									}
								}

								@include media-below-big {

									.title, .rename-title {
										@include padding-x($horizontalpadding_small);
									}
								}

								@include media-below-mid {
									@include flex-direction(column);
									height: auto;

									.title, .rename-title {
										height: $icon-size;
										border-bottom: $border;
										@include box-sizing(border-box);
									}

									.title {

										button.rename {
											font-size: 12px;
										}
									}

									.rename-title input {
										@include flex-grow(1);
										font-size: 12px;
									}

									aside {
										$height: 42px;

										height: $height;

										button, a {
											@include flex-grow(1);
											line-height: $height;
										}

										button:first-child, a:first-child {
											border-left: none;
										}
									}
								}
							}

							section.description, section.version, section.always-run {
								@include display-flex;
								@include align-items(center);
								@include padding-y(18px);
								padding-left: $leftpadding;
								padding-right: $rightpadding;
								font-size: 12px;
								font-weight: 200;
								color: $def-darkgrey;

								&:not(:first-of-type) {
									border-top: $border;
								}

								span.icon {
									@include flex-shrink(0);
									@include display-flex;
									@include align-items(center);
									width: 20px;
									margin-right: 10px;
								}

								@include media-below-big {
									@include padding-x($horizontalpadding_small);
								}
							}

							section.description {
								@include align-items(flex-start);
								position: relative;

								span.icon svg {
									@include size(16px, 13px);
									fill: $def-grey;
								}

								.markdown {
									@include flex-grow(1);
								}

								span.toggle-visibility {
									z-index: $zindex-step_description_open;
									@include flex-shrink(0);
									margin-left: 10px;

									button {
										z-index: $zindex-step_description_open;
										@include position(absolute, 0, 0);
										@include size(100%);
										opacity: 0;
									}

									svg {
										position: relative;
										z-index: -1;
										@include size(10px, 7px);
										fill: $def-grey;
										@include transition(fill $def-transition_duration, transform $def-transition_duration);
									}

									button:hover + svg, button:focus + svg {
										fill: black;
									}
								}
							}

							section.description.open {

								.markdown {
									
									p {
										margin-top: 0;
									}

									pre code {
										display: block;
										padding: 6px 10px;
									}
								}

								span.toggle-visibility {
									position: relative;

									svg {
										@include transform(rotate(-180deg));
									}
								}
							}

							section.version {

								span.icon {

									&:before {
										$radius: 5px;

										content: "";
										@include position(relative, -1px);
										display: inline-block;
										@include size(2 * $radius);
										@include border-radius($radius);
										background-color: $def-danger;
										@include transition(background-color $def-transition_duration);
									}

									&.latest:before {
										background-color: $def-green;
									}
								}

								select {
									@include flex-grow(1);
									max-width: 50%;
									margin-left: auto;
								}
							}

							section.always-run {

								span.icon svg {
									@include size(9px, 17px);
									fill: $def-grey;
								}

								.checkbox {
									margin-left: auto;
								}
							}

							section.inputs {

								h3 {
									@include margin-y(0);
									border-top: 3px solid $def-lightgrey;
									@include padding-y(10px);
									padding-left: $leftpadding;
									padding-right: $rightpadding;
									font-size: 18px;
									font-weight: 700;
									color: $def-mediumdarkgrey;
								}

								$toggle_category_button_icon-width: 10px;

								ol.input-category {
									@include margin-y(0);
									padding-left: 0;

									&:not(:last-child) {
										border-bottom: $border;
									}

									&:not(.main) {
										$margin: 10px;
										$borderwidth: 1px;
										overflow: hidden;
										margin: $margin;
										border-radius: 5px;
										border: $borderwidth solid $def-mediumlightgrey;
										
										ol.inputs-list li.input {
											padding-left: $leftpadding - $borderwidth - $margin;
										}
									}

									h4 {
										@include display-flex;
										@include justify-content(space-between);
										position: relative;
										@include margin-y(0);
										@include padding-y(10px);
										padding-left: $leftpadding;
										padding-right: 6px + $toggle_category_button_icon-width + $rightpadding;
										font-size: 12px;
										color: $def-darkgrey;
										background-color: $def-ultralightgrey;

										strong.category-name {
											@include ellipsis-oneliner;
											font-weight: 700;
										}

										button.toggle-category {
											@include position(absolute, 0, 0);
											@include size(100%);

											svg {
												$toggle_category_button_icon-height: 10px;

												@include position(absolute, 50%, $rightpadding);
												@include size($toggle_category_button_icon-width, 10px);
												margin-top: -$toggle_category_button_icon-height / 2;
												fill: black;
												@include transition(transform 0.3s, opacity $def-transition_duration);
											}

											&:not(:focus):not(:hover) svg {
												opacity: 0.6;
											}
										}
									}

									&.open button.toggle-category svg {
										@include transform(rotate(135deg));
									}

									ol.inputs-list {
										@include margin-y(0);
										padding-left: 0;
										list-style: none;

										li.input {
											position: relative;
											@include display-flex;
											@include padding-y(20px);
											padding-left: $leftpadding;
											padding-right: $rightpadding;
											border-top: 1px solid $def-mediumlightgrey;
											color: $def-mediumdarkgrey;
											@include transition(background-color $def-transition_duration);

											&:before {
												content: "";
												@include position(absolute, 0, null, null, $leftpadding);
												@include size(100%, 1px);
											}

											.input-info {
												@include flex-grow(1);
												overflow: hidden;

												h5 {
													@include display-flex;
													@include align-items(center);
													@include margin-y(0);

													span.title {
														display: block;
														max-width: 100%;
														margin-right: auto;
														@include ellipsis-oneliner;
														font-size: 12px;
														font-weight: 900;
														color: $def-darkgrey;
														@include transition(color $def-transition_duration);

														em {
															font-style: normal;
															color: white;
															text-align: center;
															white-space: nowrap;
															vertical-align: baseline;
															border-radius: 10rem;
															display: inline-block;
															padding: .25em 1em;
															font-size: 75%;
															font-weight: 200;
															letter-spacing: 0.1em;
															text-transform: uppercase;
															background: $def-purple;
														}
													}

													button.insert-variable {
														@include flex-shrink(0);
														margin-left: 6px;
													}
												}

												.input-description {
													@include margin-y(6px);
													font-size: 12px;
													color: $def-mediumdarkgrey;
												}

												textarea, select {
													@include SourceCodeProWithFallback;
													display: block;
													width: 100%;
													@include box-sizing(border-box);
													border: $border;
													@include border-radius($def-radius);
													padding: 8px;
													font-size: 12px;
													font-weight: 500;
													color: $def-darkgrey;
													background-color: $def-ultralightgrey;

													&:disabled {
														color: inherit;
													}
												}

												.is-expand {
													@include display-flex;
													@include align-items(center);
													margin-top: 12px;
													font-size: 11px;
													font-weight: 300;

													p {
														@include display-flex;
														@include align-items(center);
														@include margin-y(0);

														svg {
															@include flex-shrink(0);
															margin-right: 6px;
														}

														&.expanded svg {
															@include size(10px, 9px);
															fill: $def-green;
														}

														&.not-expanded svg {
															@include size(8px);
															fill: $def-danger;
														}
													}

													a.devcenter-info {
														margin-left: 6px;
														@include border-radius($def-radius);
														padding: 3px 8px;
														color: white;
														background-color: $def-green;
														text-decoration: none;
														@include transition(background-color $def-transition_duration);

														&:before {
															content: "?";
														}

														&:hover, &:focus {
															background-color: $def-green-shade;
														}
													}
												}
											}

											.input-change {
												$color: $def-grey;
												$transition_duration: $def-transition_duration;

												@include flex-shrink(0);
												@include display-flex;
												@include align-items(center);
												padding-left: 10px;
												font-size: 10px;
												text-transform: uppercase;
												color: $color;

												button {
													@include position(absolute, 0, 0);
													@include size(100%);
												}

												span {
													@include transition(color $transition_duration);
												}

												svg {
													@include size(10px, 7px);
													margin-left: 10px;
													fill: $color;
													@include transition(transform $transition_duration, fill $transition_duration);
													pointer-events: none;
												}

												button:hover ~ span, button:focus ~ span {
													color: black;
												}

												button:hover ~ svg, button:focus ~ svg {
													fill: black;
												}
											}
										}

										li.input.selected {
											background-color: white;

											.input-info h4 span.title {
												color: black;
											}

											.input-change {
												position: relative;

												span {
													display: none;
												}

												svg {
													@include transform(rotate(-180deg));
												}
											}
										}

										li.input.dont-change {
											cursor: not-allowed;

											.input-info h5 span.title {
												color: inherit;
											}

											.input-change {
												display: none;
											}

											* {
												cursor: inherit;
											}
										}

										li.input.required-empty {
											
											.input-info textarea {
												border-color: $def-purple;
											}
										}
									}
								}

								@include media-below-big {

									h3 {
										@include padding-x($horizontalpadding_small);
									}

									ol.input-category {

										h4 {
											padding-left: $horizontalpadding_small;
											padding-right: 6px + $toggle_category_button_icon-width + $horizontalpadding_small;

											button.toggle-category svg {
												right: $horizontalpadding_small;
											}
										}

										ol.inputs-list > li.input {
											@include padding-x($horizontalpadding_small);

											&:before {
												left: $horizontalpadding_small;
											}

											.input-info h5 {
												@include flex-direction(column);
												@include align-items(flex-start);

												button.insert-variable {
													@include align-self(flex-start);
													margin-left: 0;
													margin-top: 4px;
												}
											}
										}
									}
								}
							}

							section.outputs {

								h3 {
									@include margin-y(0);
									@include border-y($border);
									@include padding-y(10px);
									padding-left: $leftpadding;
									padding-right: $rightpadding;
									font-size: 12px;
									font-weight: 300;
									color: $def-darkgrey;
									background-color: $def-verylightgrey;
								}

								p.no-outputs {
									@include margin-y(16px);
									padding-left: $leftpadding;
									padding-right: $rightpadding;
									font-size: 12px;
								}

								table {
									$table_border: 1px solid $def-mediumlightgrey;

									table-layout: fixed;
									width: 100%;
									@include margin-y(0);
									border-collapse: collapse;
									padding-left: 0;
									list-style: none;

									tr {
										font-size: 12px;

										td {
											width: 50%;
											@include padding-y(12px);
											padding-left: $leftpadding;
											padding-right: $rightpadding;
										}

										td.key {
											@include ellipsis-oneliner;
											font-weight: 300;
											color: $def-purple;
										}

										td.description {
											position: relative;
											font-weight: 200;
											color: $def-grey;

											p {
												@include margin-y(0);
											}

											button {
												@include position(absolute, 0, 0);
												@include size(100%);
											}

											.toggleabble-description {
												@include display-flex;
												@include align-items(center);

												p {
													@include flex-grow(1);

													pre {
														white-space: normal;
														word-break: break-all;
													}
												}

												svg {
													@include flex-shrink(0);
													@include size(10px, 7px);
													margin-left: 10px;
													fill: $def-grey;
													@include transition(fill $def-transition_duration, transform $def-transition_duration);
												}

												p:not(.oneliner) + svg {
													@include transform(rotate(-180deg));
												}
											}

											button:hover + .toggleabble-description, button:focus + .toggleabble-description {
												
												svg {
													fill: black;
												}
											}
										}
									}

									tr:not(:first-child) {
										border-top: $table_border;
									}

									td:not(:first-child) {
										border-left: $table_border;
									}
								}

								@include media-below-big {

									h3 {
										@include padding-x($horizontalpadding_small);
									}

									p.no-outputs {
										@include padding-x($horizontalpadding_small);
									}

									table tr td {
										@include padding-x($horizontalpadding_small);
									}
								}

								@include media-below-mid {

									table tr td.description {
										display: none;
									}
								}
							}
						}

						button.delete-step {
							width: 100%;
							@include ellipsis-oneliner;
						}
					}
				}

				@include media-below-mid {
					@include padding-x($main-horizontalpadding_small);
				}

				@include media-below-big {

					header.workflow-header {

						.header-info {

							h2 {
								max-width: $steptitle-width_small;
							}
						}
					}
					
					article ul.steps li {

						button.add-step:last-child {
							margin-right: $spacing + $steptitle-width_small;
						}

						.step-actions {

							button.step span.info {
								width: $steptitle-width_small;
							}
						}
					}
				}

				@include media-below-mid {

					header.workflow-header {

						.header-info {
							display: block;

							h2 {
								overflow: hidden;
								max-width: none;
							}

							.stack {
								margin-left: 0;
								margin-top: 10px;

								.icon {
									margin-left: 0;
								}
							}
						}
					}

					article ul.steps li {

						button.add-step:last-child {
							margin-right: 0;
						}

						.step-actions {

							button.step span.icon {
								position: static;
								display: block;
							}
						
							button.step span.info {
								display: none;
							}
						}
					}
				}

				@include media-below-small {

					article ul.steps li {

						button.add-step {
							width: $icon-size_small;
						}

						.step-actions {
						
							button.step span.icon {
								@include size($icon-size_small);
							}

							button.update-step {
								left: $icon-size_small;
							}
						}
					}
				}
			}

			section.workflow.selected {
				background-color: white;
			}

			section.workflow:not(.selected) {
				$inactive_opacity: 0.7;

				article {

					ul.steps {
						opacity: $inactive_opacity;
					}
				}
			}

			// Workflow chain arrow

			$arrow-width: 1px;
			$arrow_end-width: 15px;
			$arrow-color: $def-darkgrey;

			section.workflow {

				header.workflow-header {

					&:before {
						content: "";
						@include box-sizing(border-box);
						width: $arrow_end-width;
						@include margin-x(($icon-size - $arrow_end-width) / 2);
						@include padding-x(($arrow_end-width - $arrow-width) / 2);
						background-color: $arrow-color;
						background-clip: border-box, content-box;

						background-image: background_image_from_svg_content_with_attributes('<%= svg("arrow_slim-down") %>', (
							fill: rgba($arrow-color, 0.99)
						)), none;
						background-size: contain;
						background-position: center bottom;
						background-repeat: no-repeat;

						@include media-below-small {
							@include margin-x(($icon-size_small - $arrow_end-width) / 2);
						}
					}
				}

				article {

					ul.steps {

						&:after {
							content: "";
							@include flex-grow(1);
							@include box-sizing(border-box);
							width: $arrow_end-width;
							min-height: 30px;
							@include margin-x(($icon-size - $arrow_end-width) / 2);
							@include padding-x(($arrow_end-width - $arrow-width) / 2);
							background-color: $arrow-color;
							background-clip: content-box;

							@include media-below-small {
								@include margin-x(($icon-size_small - $arrow_end-width) / 2);
							}
						}
					}
				}
			}

			section.workflow:first-child {

				header.workflow-header {
					margin-top: 35px;

					&:before {
						border-top: $arrow-width solid $arrow-color;
						background-image: none, none;
					}

					h2 {
						margin-top: 0;
					}
				}
			}

			section.workflow:last-child {
				padding-bottom: 50px;

				article {

					ul.steps {

						&:after {
							border-bottom: $arrow-width solid $arrow-color;
						}
					}
				}
			}

			section.workflow.selected:not(:first-child) {

				header.workflow-header {

					.header-info {
						$negative_spacing: -15px;

						@include position(relative, $negative_spacing);

						.stack {
							@include position(relative, - $negative_spacing + 15px);

							@include media-below-mid {
								position: static;
							}
						}
					}
				}
			}

			section.workflow:not(.selected):not(:first-child) {

				header.workflow-header {

					h2 {
						margin-top: 20px;
					}
				}
			}

			//
		}
	}
}

.popup-body#add-workflow-popup-body {
	width: 480px !important;

	article {

		input, select {
			display: block;
			@include box-sizing(border-box);
			width: 100%;
			@include border-radius($def-radius);
			border: 1px solid $def-mediumlightgrey;
			padding: 12px;
			font-size: 14px;
			font-weight: 200;
		}

		input {
			margin-bottom: 20px;
		}

		label {
			display: block;
			margin-bottom: 10px;
			font-size: 12px;
			font-weight: 600;
			text-transform: uppercase;
		}
	}
}

.popup-body#rearrange-workflow-chain-popup-body, .popup-body#add-run-workflow-popup-body {

	header {
		background-color: $def-ultralightgrey;
	}

	article {

		ul.workflow-chain {
			$icon-size: 12px;
			$workflow-padding: 8px;
			$fontsize: 14px;
			$color: $def-darkgrey;

			@include display-flex;
			@include flex-direction(column);
			@include margin-y(0);
			@include padding-y(30px);
			padding-left: 0;
			list-style: none;

			ul.workflow-subchain {
				$border: 1px solid $def-grey;

				border: $border;
				@include border-radius($def-radius);
				padding-left: 0;

				li {
					padding: $workflow-padding;
					padding-left: $workflow-padding + $icon-size + $workflow-padding;
					@include ellipsis-oneliner;
					font-size: $fontsize;
					font-weight: 200;
					background-repeat: no-repeat;
					background-position: left $workflow-padding center;
					color: $color;
				}

				li:not(:last-child) {
					border-bottom: 1px solid $def-grey;
				}
			}

			ul.workflow-subchain:empty {
				display: none;
			}

			ul.workflow-subchain.before-run, ul.workflow-subchain.after-run {
				background-color: $def-verylightgrey;
			}

			ul.workflow-subchain.before-run {

				li {
					background-image: background_image_from_svg_content_with_attributes('<%= svg("workflow/icon-before_run") %>', (
						fill: rgba($color, 0.99)
					));
					background-size: $icon-size auto;
				}
			}

			ul.workflow-subchain.after-run {

				li {
					background-image: background_image_from_svg_content_with_attributes('<%= svg("workflow/icon-after_run") %>', (
						fill: rgba($color, 0.99)
					));
					background-size: $icon-size auto;
				}
			}

			ul.workflow-subchain.selected {
				background-color: white;

				li {
					background-image: background_image_from_svg_content_with_attributes('<%= svg("workflow/icon-current") %>', (
						fill: rgba($color, 0.99)
					));
					background-size: $icon-size auto;
				}
			}

			ul.workflow-subchain.dragged-element {
				z-index: $zindex-dragged_element;
			}

			&[order-by-drag] ul.workflow-subchain {
				$drag_handle-reservedspace: 20px;

				margin-left: $drag_handle-reservedspace;
				cursor: move;

				&:before {
					@include position(absolute, 0, null, null, -$drag_handle-reservedspace);
					content: "";
					@include size($drag_handle-reservedspace, 100%);
					background-position: center;
					background-image: background_image_from_svg_content_with_attributes('<%= svg("drag_handle") %>', (
						fill: rgba($color, 0.99)
					));
					background-size: 4px auto;
					background-repeat: no-repeat;
				}
			}

			ul.workflow-subchain, select.run-workflow-selector {
				@include margin-y(5px);
			}

			select.run-workflow-selector {
				width: 100%;
				border: none;
				padding: $workflow-padding;
				padding-left: $workflow-padding + $icon-size + $workflow-padding;
				@include ellipsis-oneliner;
				font-size: $fontsize;
				font-weight: 200;
				background-repeat: no-repeat;
				background-position: left $workflow-padding center, right $workflow-padding center;
				background-color: $def-green;
				color: white;
				@include transition(background-color $def-transition_duration);
			}

			select.run-workflow-selector:hover, select.run-workflow-selector:focus {
				background-color: $def-green-shade;
			}

			select.run-workflow-selector.before-run {
				background-image: background_image_from_svg_content_with_attributes('<%= svg("workflow/icon-before_run") %>', (
					fill: rgba($def-green-light, 0.99)
				)), background_image_from_svg_content_with_attributes('<%= svg("arrow-down") %>', (
					fill: rgba(white, 0.99)
				));
				background-size: $icon-size auto, 8px auto;
			}

			select.run-workflow-selector.after-run {
				background-image: background_image_from_svg_content_with_attributes('<%= svg("workflow/icon-before_run") %>', (
					fill: rgba($def-green-light, 0.99)
				)), background_image_from_svg_content_with_attributes('<%= svg("arrow-down") %>', (
					fill: rgba(white, 0.99)
				));
				background-size: $icon-size auto, 8px auto;
			}
		}

		ul.workflow-chain.drag-in-progress {

			* {
				@include user-select(none);
			}
		}
	}

	footer {
		@include flex-shrink(0);
		@include display-flex;

		button {
			width: 50%;
			@include padding-y(18px);
			font-size: 16px;
			font-weight: 300;
			color: white;
			@include transition(background-color $def-transition_duration);
		}

		button.done {
			background-color: $def-green;
		}

		button.done:hover, button.done:focus {
			background-color: $def-green-shade;
		}

		button.cancel {
			background-color: $def-danger;
		}

		button.cancel:hover, button.cancel:focus {
			background-color: $def-danger-shade;
		}
	}
}

.popup-body#add-run-workflow-popup-body {

	ul.workflow-subchain.before-run {
		@include order(1);
	}

	select.run-workflow-selector.before-run {
		@include order(2);
	}

	ul.workflow-subchain.selected {
		@include order(3);
	}

	select.run-workflow-selector.after-run {
		@include order(5);
	}

	ul.workflow-subchain.after-run {
		@include order(5);
	}
}

.popup-body#insert-variable-popup-body {

	header {

		h2 {
			margin-top: 0;
			margin-bottom: 12px;
			font-size: inherit;
			font-weight: inherit;
		}

		input {
			$searchicon_width: 16px;
			$padding: 12px;

			display: block;
			@include box-sizing(border-box);
			width: 100%;
			border: none;
			@include border-radius($def-radius);
			padding: $padding;
			padding-left: $padding + $searchicon_width + $padding;
			font-size: 14px;
			font-weight: 200;
			background-color: $def-verylightgrey;
			background-image: background_image_from_svg_content_with_attributes('<%= svg("search") %>', (
				fill: rgba($def-darkgrey, 0.99)
			));
			background-size: $searchicon_width auto;
			background-repeat: no-repeat;
			background-position: left $padding center;
		}
	}

	article {

		ul.variable-source {
			@include margin-y(0);
			padding-left: 0;
			list-style: none;

			li {
				margin-bottom: 5px;

				button {
					display: block;
					@include box-sizing(border-box);
					width: 100%;
					border: 1px solid $def-lightgrey;
					@include border-radius($def-radius);
					padding: 10px 14px;
					text-align: left;
					@include transition(background-color $def-transition_duration);

					strong {
						display: block;
						margin-bottom: 4px;
						@include ellipsis-oneliner;
						font-size: 12px;
						font-weight: 400;
						color: $def-purple;
					}

					em {
						display: block;
						@include ellipsis-oneliner;
						font-size: 10px;
						font-weight: 200;
						font-style: normal;
						text-transform: uppercase;
						color: $def-grey;
					}
				}

				button:hover, button:focus {
					background-color: $def-lightgrey;
				}
			}

			&:last-child li:last-child {
				margin-bottom: 0;
			}
		}
	}
}
