@import "default";
@import "constants";

.tab-workflows {

	section.manage-workflow {
		$icon_size: 52px;
		$icon_size_small: 36px;

		@include display-flex;

		ul.steps {
			margin-top: 0;
			margin-right: 12px;
			padding-left: 0;
			list-style: none;
			@include flex-shrink(0);

			li {
				$margin: 8px;

				width: 100%;
				margin-bottom: $margin;

				button.add-step {
					width: $icon_size;
					margin-bottom: $margin;
					@include border-radius($def-radius);
					@include padding-y(4px);
					@include transition(background-color $def-transition_duration);
					background-color: $def-mediumlightgrey;

					svg {
						@include size(12px, auto);
						fill: white;
					}
				}

				button.add-step:hover, button.add-step:focus {
					color: white;
					background-color: $def-darkgrey;
				}

				button.step {
					@include display-flex;
					@include align-items(stretch);

					span.icon {
						@include box-sizing(border-box);
						@include size($icon_size);
						border: 1px solid $def-lightgrey;
						@include border-radius($def-radius);
						background-size: cover;
					}

					span.info {
						@include display-flex;
						@include flex-direction(column);
						@include justify-content(center);
						@include align-items(flex-start);
						width: 280px;
						border: 1px solid $def-mediumlightgrey;
						@include border-radius($def-radius);
						@include padding-x(20px);
						@include transition(border-color $def-transition_duration, color $def-transition_duration, background-color $def-transition_duration);
						background-color: $def-verylightgrey;

						strong {
							@include display-flex;
							@include align-items(center);
							max-width: 100%;
							font-size: 14px;
							font-weight: 400;

							span.title {
								@include flex-shrink(1);
								@include ellipsis-oneliner;
							}

							span.verified {
								margin-left: 5px;

								svg {
									width: 10px;
									height: auto;
								}
							}
						}

						em.version {
							display: block;
							@include ellipsis-oneliner;
							font-size: 12px;
							font-style: normal;
							font-weight: 100;
							color: $def-grey;
						}
					}

					span.icon + span.info {
						margin-left: $margin;
					}
				}

				@include media-below-big {
					
					button.step span.info {
						width: 220px;
					}
				}

				@include media-below-mid {
					
					button.step span.info {
						display: none;
					}
				}

				@include media-below-small {

					button.add-step {
						width: $icon_size_small;
					}
					
					button.step span.icon {
						@include size($icon_size_small);
					}
				}
			}

			li button.step:hover span.info, li button.step:focus span.info, li.selected button.step span.info {
				$color: $def-darkgrey;

				border-color: $color;
				color: white;
				background-color: $color;
			}
		}

		ul.steps.drag-in-progress {

			li {

				button.add-step {
					visibility: hidden;
				}
			}

			li.dragged-element {
				z-index: $zindex-dragged_element;
			}
		}

		aside.step-details {
			$horizontalpadding: 25px;
			$horizontalpadding_small: 12px;
			$delete_step_color: $def-danger;

			@include flex-grow(1);
			overflow: hidden;

			.bitrise-steplib-step-details {
				$border: 1px solid $def-mediumlightgrey;

				@include box-sizing(border-box);
				border: $border;
				@include border-radius($def-radius);
				overflow: hidden;

				header.manage-step {
					@include display-flex;
					@include box-sizing(border-box);
					height: $icon_size;
					border-bottom: $border;
					background-color: $def-verylightgrey;

					.title {
						@include flex-grow(1);
						@include display-flex;
						@include padding-x($horizontalpadding);
						overflow: hidden;

						button.rename {
							text-align: left;
							@include ellipsis-oneliner;
							font-size: 14px;
							font-weight: 400;
							color: $def-darkgrey;
							@include transition(color $def-transition_duration);
						}

						button.rename:focus {
							color: black;
						}

						strong.verified {
							$radius: 8px;

							@include align-self(center);
							line-height: 2 * $radius;
							margin-left: 15px;
							@include border-radius($radius);
							@include padding-x(10px);
							font-size: 9px;
							font-weight: 200;
							text-transform: uppercase;
							color: white;
							background-color: $def-green;
						}
					}

					.rename-title {
						@include flex-grow(1);
						@include display-flex;
						padding: 6px $horizontalpadding;

						input {
							width: 60%;
							border: 1px solid $def-lightgrey;
							@include border-radius($def-radius);
							@include padding-x(8px);
							font-size: 14px;
						}

						button.ok {
							margin-left: 6px;
							@include border-radius($def-radius);
							@include padding-x(8px);
							font-size: 12px;
							font-weight: 200;
							color: white;
							background-color: $def-green;
							@include transition(background-color $def-transition_duration);
						}

						button.ok:hover, button.ok:focus {
							background-color: $def-green-shade;
						}
					}

					aside {
						@include display-flex;

						button, a {
							$transition_duration: $def-transition_duration;

							@include display-flex;
							@include justify-content(center);
							@include box-sizing(border-box);
							width: $icon_size;
							border-left: $border;
							@include transition(background-color $transition_duration);

							svg {
								height: auto;
								fill: $def-grey;
								@include transition(fill $transition_duration);
							}
						}

						button.clone svg {
							width: 18px;
						}

						a.source svg {
							width: 19px;
						}

						button.delete svg {
							width: 17px;
						}

						button.clone:focus, button.clone:hover, a.source:focus, a.source:hover {

							svg {
								fill: $def-verydarkgrey;
							}
						}

						button.delete:focus, button.delete:hover {
							background-color: $def-danger-light;

							svg {
								fill: $def-danger;
							}
						}
					}

					@include media-below-big {

						.title, .rename-title {
							@include padding-x($horizontalpadding_small);
						}

						.title {
							@include flex-direction(column);
							@include justify-content(center);

							strong.verified {
								margin-top: 4px;
								margin-left: 0;
								@include align-self(flex-start);
							}
						}
					}

					@include media-below-mid {
						@include flex-direction(column);
						height: auto;

						.title, .rename-title {
							height: $icon_size;
							border-bottom: $border;
							@include box-sizing(border-box);
						}

						.title {

							button.rename {
								font-size: 12px;
							}

							strong.verified {
								$radius: 6px;

								line-height: 2 * $radius;
								@include border-radius($radius);
								font-size: 8px;
							}
						}

						.rename-title input {
							@include flex-grow(1);
							font-size: 12px;
						}

						aside {
							height: 42px;

							button, a {
								@include flex-grow(1);
							}

							button:first-child, a:first-child {
								border-left: none;
							}
						}
					}
				}

				section.description, section.version, section.always-run {
					@include display-flex;
					padding: 18px $horizontalpadding;
					font-size: 12px;
					font-weight: 100;
					color: $def-darkgrey;

					&:not(:first-of-type) {
						border-top: $border;
					}

					span.icon {
						@include flex-shrink(0);
						@include display-flex;
						@include align-items(center);
						width: 20px;
						margin-right: 10px;

						svg {
							fill: $def-grey;
						}
					}

					@include media-below-big {
						@include padding-x($horizontalpadding_small);
					}
				}

				section.description {
					@include align-items(flex-start);
					position: relative;

					span.icon svg {
						@include size(16px, auto);
					}

					p {
						@include margin-y(0);
					}

					span.toggle-visibility {
						margin-left: 10px;

						button {
							@include position(absolute, 0, 0);
							@include size(100%);
							opacity: 0;
						}

						svg {
							@include size(10px, auto);
							fill: $def-grey;
							@include transition(fill $def-transition_duration, transform $def-transition_duration);
						}

						button:hover + svg, button:focus + svg {
							fill: black;
						}
					}
				}

				section.description:not(.open) {

					p {
						@include ellipsis-oneliner;
					}
				}

				section.description.open {

					span.toggle-visibility {

						svg {
							@include transform(rotate(-180deg));
						}
					}
				}

				section.version {

					span.icon:before {
						$radius: 5px;

						content: "";
						@include position(relative, -1px);
						display: inline-block;
						@include size(2 * $radius);
						@include border-radius($radius);
						background-color: $def-grey;
					}

					select {
						@include flex-grow(1);
						max-width: 50%;
						margin-left: auto;
					}
				}

				section.always-run {

					span.icon svg {
						@include size(9px, auto);
					}

					input[type="checkbox"] {
						margin-left: auto;
					}
				}

				section.inputs {

					h3 {
						@include margin-y(0);
						@include border-y($border);
						padding: 10px $horizontalpadding;
						font-size: 12px;
						font-weight: 300;
						color: $def-darkgrey;
						background-color: $def-verylightgrey;
					}

					ul {
						@include margin-y(0);
						padding-left: 0;
						list-style: none;

						li {
							@include display-flex;
							padding: 20px $horizontalpadding;
							background-color: $def-ultralightgrey;

							.input-info {
								@include flex-grow(1);
								overflow: hidden;

								h4 {
									@include display-flex;
									@include align-items(center);
									@include margin-y(0);

									span.title {
										display: block;
										max-width: 100%;
										margin-right: auto;
										@include ellipsis-oneliner;
										font-size: 12px;
										font-weight: 200;
										color: $def-darkgrey;
										@include transition(color $def-transition_duration);
									}

									button.insert-variable {
										$color: $def-green-shade;

										margin-left: 6px;
										border: 1px solid $color;
										@include border-radius($def-radius);
										padding: 5px;
										font-size: 12px;
										font-weight: 100;
										color: $color;
										background-color: $def-green-light;
										@include transition(border-color $def-transition_duration, color $def-transition_duration, background-color $def-transition_duration);
									}

									button.insert-variable:hover, button.insert-variable:focus {
										border-color: $def-green;
										color: white;
										background-color: $def-green;
									}
								}

								strong.key {
									display: block;
									margin-top: 4px;
									@include ellipsis-oneliner;
									font-size: 14px;
									font-weight: 100;
								}

								.manage-input {
									position: relative;
									margin-top: 10px;

									textarea {
										display: block;
										@include box-sizing(border-box);
										@include size(100%, 42px);
										border: $border;
										@include border-radius($def-radius);
										padding: 8px;
										font-size: 12px;
										font-weight: 100;
										color: $def-darkgrey;
										background-color: $def-verylightgrey;
									}

									.is-expand {
										@include display-flex;
										@include align-items(center);
										margin-top: 18px;

										label {
											margin-left: 14px;
											font-size: 12px;
											color: $def-darkgrey;

											strong {
												display: block;
												font-weight: 600;
												color: $def-verydarkgrey;
											}

											em {
												display: block;
												font-style: normal;
												font-weight: 100;

												a {
													text-decoration: none;
													color: $def-green;
												}

												a:hover, a:focus {
													text-decoration: underline;
												}
											}
										}
									}
								}
							}

							button.change {
								$color: $def-grey;
								$transition_duration: $def-transition_duration;

								@include display-flex;
								@include align-items(center);
								padding-left: 10px;
								font-size: 10px;
								text-transform: uppercase;
								color: $color;
								@include transition(color $transition_duration);

								svg {
									@include size(10px, auto);
									margin-left: 10px;
									fill: $color;
									@include transition(transform $transition_duration, fill $transition_duration);
								}
							}

							button.change:hover, button.change:focus {
								color: black;

								svg {
									fill: black;
								}
							}
						}

						li:not(:last-child) {
							border-bottom: $border;
						}

						li:not(.selected) {

							.input-info h4 span.title:after {
								content: ":";
							}
						}

						li.selected {
							background-color: white;

							.input-info h4 span.title {
								color: black;
							}

							button.change {

								span {
									display: none;
								}

								svg {
									@include transform(rotate(-180deg));
								}
							}
						}
					}

					@include media-below-big {

						h3, ul li {
							@include padding-x($horizontalpadding_small);
						}

						ul li .input-info h4 {
							@include flex-direction(column);
							@include align-items(flex-start);

							button.insert-variable {
								@include align-self(flex-end);
								margin-left: 0;
								margin-top: 4px;
							}
						}
					}
				}

				section.outputs {

					h3 {
						@include margin-y(0);
						@include border-y($border);
						padding: 10px $horizontalpadding;
						font-size: 12px;
						font-weight: 300;
						color: $def-darkgrey;
						background-color: $def-verylightgrey;
					}

					p.no-outputs {
						@include margin-y(16px);
						@include padding-x($horizontalpadding);
						font-size: 12px;
					}

					table {
						$table_border: 1px solid $def-mediumlightgrey;

						table-layout: fixed;
						width: 100%;
						@include margin-y(0);
						border-collapse: collapse;
						padding-left: 0;
						list-style: none;

						tr {
							font-size: 12px;

							td {
								width: 50%;
								@include ellipsis-oneliner;
								padding: 12px $horizontalpadding;
							}

							td.key {
								font-weight: 300;
								color: $def-purple;
							}

							td.description {
								font-weight: 100;
								color: $def-grey;
							}
						}

						tr:not(:first-child) {
							border-top: $table_border;
						}

						td:not(:first-child) {
							border-left: $table_border;
						}
					}

					@include media-below-big {

						h3 {
							@include padding-x($horizontalpadding_small);
						}

						p.no-outputs {
							@include padding-x($horizontalpadding_small);
						}

						table tr td {
							@include padding-x($horizontalpadding_small);
						}
					}

					@include media-below-mid {

						table tr td.description {
							display: none;
						}
					}
				}
			}

			button.delete-step {
				width: 100%;
				margin-top: 15px;
				border: 1px solid $delete_step_color;
				@include border-radius($def-radius);
				padding: 12px $horizontalpadding;
				@include ellipsis-oneliner;
				font-size: 14px;
				font-weight: 100;
				color: $delete_step_color;
				@include transition(color $def-transition_duration, background-color $def-transition_duration);

				@include media-below-big {
					@include padding-x($horizontalpadding_small);
				}
			}

			button.delete-step:hover, button.delete-step:focus {
				background-color: $delete_step_color;
				color: white;
			}
		}
	}
}

.popup-body-add-step {

	.type-tag-filter {
		display: inline-block;
	}
}
