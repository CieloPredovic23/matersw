.add-step-sidebar[ng-controller="AddStepController as addStepCtrl" ng-class="{'open': addStepService.isVisible}" is-category-mode-flag="addStepCtrl.isCategoryMode" force-list-mode-flag="addStepCtrl.isWindowSizeForcingListMode"]
	.close-layer[ng-click="addStepService.isVisible = false"]
	.content
		header
			.filters
				button.category-mode[ng-click="addStepCtrl.isCategoryMode = true" ng-if="!addStepCtrl.isCategoryMode && !addStepCtrl.isWindowSizeForcingListMode"] = svg("arrow-down")
				input.step-filter[type="text" placeholder="#{ data[:strings][:workflows][:steps][:add][:search_placeholder] }" ng-model="addStepCtrl.stepFilter" ng-focus="addStepCtrl.isCategoryMode = false"]
				.project-type-filter[ng-if="appService.projectType"]
					button.current[ng-click="addStepCtrl.shouldFilterByProjectType = true" ng-disabled="addStepCtrl.shouldFilterByProjectType" ng-class="appService.projectType | projectTypeCSSClass"]
						span.platform-icon.apple = svg("logo/apple")
						span.platform-icon.android = svg("logo/android")
						span.platform-icon.xamarin = svg("logo/xamarin")
						span.platform-icon.cordova = svg("logo/cordova")
						span.platform-icon.ionic = svg("logo/ionic")
						span.platform-icon.fastlane = svg("logo/fastlane")
						span.platform-icon.react-native = svg("logo/react")
						span.platform-icon.other = svg("logo/other")
					button.all[ng-click="addStepCtrl.shouldFilterByProjectType = false" ng-disabled="!addStepCtrl.shouldFilterByProjectType"] == data[:strings][:workflows][:steps][:add][:all_project_types]
			ol.type-filters[ng-if="!addStepCtrl.isCategoryMode"]
				li[ng-repeat="typeFilter in addStepCtrl.filteredTypeFilters()"]
					button[ng-bind="'#' + typeFilter" ng-class="{'selected': typeFilter == addStepCtrl.selectedTypeFilter}" ng-click="addStepCtrl.selectedTypeFilter = (addStepCtrl.selectedTypeFilter == typeFilter ? null : typeFilter)"]
		p.progress-indicator[progress-model="addStepCtrl.loadProgress"]
		div[ng-if="addStepCtrl.loadProgress.isIdle"]
			div[ng-if="addStepCtrl.isCategoryMode"]
				ol.categories
					li.category[ng-repeat="category in addStepCtrl.categories" ng-class="category.cssClass"]
						header
							h3[ng-bind="category.title"]
							.step-pagination
								button.page[ng-repeat="pageIndex in [].constructor(category.paginateStepsConfig.pageCount) track by $index" ng-disabled="$index == category.paginateStepsConfig.currentPageIndex" ng-click="category.paginateStepsConfig.currentPageIndex = $index; category.paginateStepsConfig.currentOffsetInPage = 0;"]
						.steps-wrapper
							ol.steps[add-step-dragger drag-in-progress-flag="addStepCtrl.isDragInProgress" paginate-steps-config="category.paginateStepsConfig"]
								li.add-step-sidebar-step[ng-repeat="step in addStepCtrl.filteredSteps(category.steps)" ng-style="{'width': (100 / category.paginateStepsConfig.stepsCountPerPage) + '%'}" step="step" select-callback="addStepCtrl.stepSelected(step)"]
							button.paginate.left[ng-click="addStepCtrl.paginateSelected(category, 'left')" ng-disabled="category.paginateStepsConfig.currentPageIndex == 0 && category.paginateStepsConfig.currentOffsetInPage == 0" tabindex="-1"]
							button.paginate.right[ng-click="addStepCtrl.paginateSelected(category, 'right')" ng-disabled="category.paginateStepsConfig.currentPageIndex == category.paginateStepsConfig.pageCount - 1" tabindex="-1"]
				button.show-all-steps[ng-click="addStepCtrl.isCategoryMode = false"]
					= svg("workflow/icon-add_step-show_all")
					span == data[:strings][:workflows][:steps][:add][:show_all_steps]
			ol.steps[ng-if="!addStepCtrl.isCategoryMode"]
				li.add-step-sidebar-step[ng-repeat="step in addStepCtrl.filteredSteps()" step="step" select-callback="addStepCtrl.stepSelected(step)"]
