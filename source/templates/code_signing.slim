.tab-code-signing[ng-controller="CodeSigningController as codeSigningCtrl"]
	section.progress-indicator[progress-model="codeSigningCtrl.loadProgress"]
	section.certificate-help[ng-if="codeSigningCtrl.shouldShowCodeSigningHints"]
		ul
			li.codesigndoc
				div
					h2 == data[:strings][:code_signing][:certificate_help][:codesigndoc][:title]
					p == data[:strings][:code_signing][:certificate_help][:codesigndoc][:details]
					code == data[:strings][:code_signing][:certificate_help][:codesigndoc][:code]
			li.upload
				div
					h2 == data[:strings][:code_signing][:certificate_help][:upload][:title]
					p == data[:strings][:code_signing][:certificate_help][:upload][:details]
			li.add-step
				div
					h2 == data[:strings][:code_signing][:certificate_help][:add_step][:title]
					p == data[:strings][:code_signing][:certificate_help][:add_step][:details]
		button.hide[ng-click="codeSigningCtrl.codeSigningHintsDismissed()"] = svg("cross_slim")
	section.cardo.uppercase.slim.provisioning-profiles[ng-controller="ProvProfileController as provProfileCtrl" ng-if="codeSigningCtrl.areAnyOfTheProjectTypesAvailable(['ios', 'osx', 'macos', 'xamarin'])"]
		header
			h2.title
				span == data[:strings][:code_signing][:prov_profile][:header][:card_title]
				span<[ng-if="provProfileCtrl.provProfiles.length > 0" ng-bind="'(' + provProfileCtrl.provProfiles.length + '/' + provProfileCtrl.maximumProvProfilesCount + ')'"]
			h2.expose[ng-if="provProfileCtrl.provProfiles.length > 0"]
				span == data[:strings][:code_signing][:prov_profile][:header][:is_expose_param_title]
		article
			p.progress-indicator[progress-model="provProfileCtrl.loadProvProfilesProgress"]
			p.progress-indicator[progress-model="provProfileCtrl.deleteProvProfileProgress"]
			div[ng-if="provProfileCtrl.loadProvProfilesProgress.isIdle && !provProfileCtrl.deleteProvProfileProgress.isInProgress"]
				p.notification.no-icon[ng-if="provProfileCtrl.provProfiles.length == 0"] == data[:strings][:code_signing][:prov_profile][:no_prov_profiles_added_yet]
				ul.uploaded-files
					li.uploaded-file[ng-repeat="provProfile in provProfileCtrl.provProfiles"]
						.details
							span.file-data.name[ng-bind="provProfile.displayName()"]
						.expose[trigger-popover="#{ data[:strings][:code_signing][:expose_for_pr_popover_content] }"]
							checkbox[ng-model="provProfileCtrl.provProfileIsExposeGetterSetterConfigs[$index].getterSetter" ng-disabled="provProfileCtrl.provProfileIsExposeGetterSetterConfigs[$index].progress.isInProgress" ng-model-options="{getterSetter: true}" checkbox-id-expression="'prov-profile-is-expose-checkbox-' + $index"]
							label[for="'prov-profile-is-expose-checkbox-' + $index"] == data[:strings][:code_signing][:prov_profile][:is_expose]
						.actions
							a.furto.download[href="{{ provProfile.download() }}"] = svg("arrow_tailed_slim-down")
							button.furto.delete[ng-click="provProfileCtrl.deleteProvProfile(provProfile)"] = svg("cross")
				p.notification.error[ng-if="provProfileCtrl.provProfiles.length >= provProfileCtrl.maximumProvProfilesCount"] == data[:strings][:code_signing][:prov_profile][:upload_count_limit_reached]
				p.progress-indicator[progress-model="provProfileCtrl.uploadProvProfilesProgress"]
				.file-upload[ng-if="!provProfileCtrl.uploadProvProfilesProgress.isInProgress && provProfileCtrl.provProfiles.length < provProfileCtrl.maximumProvProfilesCount"]
					file-uploader[multiple onupload="provProfileCtrl.uploadProvProfiles()" model="provProfileCtrl.provProfileUploader" on-file-change="provProfileCtrl.filesSelectedForUpload($files)"]
						strong == data[:strings][:code_signing][:prov_profile][:upload_action]
						em == data[:strings][:code_signing][:prov_profile][:upload_instructions]
	section.cardo.uppercase.slim.code-signing-identities[ng-controller="CertificateController as certificateCtrl" ng-if="codeSigningCtrl.areAnyOfTheProjectTypesAvailable(['ios', 'osx', 'macos', 'xamarin'])"]
		header
			h2.title
				span == data[:strings][:code_signing][:certificate][:header][:card_title]
				span<[ng-if="certificateCtrl.certificates.length > 0" ng-bind="'(' + certificateCtrl.certificates.length + '/' + certificateCtrl.maximumCertificatesCount + ')'"]
			h2.password[ng-if="certificateCtrl.certificates.length > 0"]
				span == data[:strings][:code_signing][:certificate][:header][:password_param_title]
			h2.expose[ng-if="certificateCtrl.certificates.length > 0"]
				span == data[:strings][:code_signing][:certificate][:header][:is_expose_param_title]
		article
			p.progress-indicator[progress-model="certificateCtrl.loadCertificatesProgress"]
			p.progress-indicator[progress-model="certificateCtrl.certificateActionProgress"]
			div[ng-if="certificateCtrl.loadCertificatesProgress.isIdle && !certificateCtrl.certificateActionProgress.isInProgress"]
				p.notification.no-icon[ng-if="certificateCtrl.certificates.length == 0"] == data[:strings][:code_signing][:certificate][:no_certificates_added_yet]
				ul.uploaded-files
					li.uploaded-file[ng-repeat="certificate in certificateCtrl.certificates" ng-init="showPassword = false"]
						.details
							span.file-data.name[ng-bind="certificate.displayName()"]
						.password-edit[ng-if="certificate != certificateCtrl.renamedCertificate"]
							form.password[ng-submit="certificateCtrl.changePassword()" autocomplete="off" name="certificatePasswordForm"]
								.input-with-show-password
									input.password-input[type="{{ showPassword ? 'text' : 'password' }}" ng-model="certificate.password" name="password" ng-focus="certificateCtrl.changePasswordSelected(certificate)"]
									eye-checkbox[ng-model="showPassword" checkbox-id-expression="'code-signin-certificate-show-password-checkbox-' + $index"]
								.change-password-actions[ng-if="certificate == certificateCtrl.passwordEditedCertificate"]
									input.ok.rebo.small.green.submit[type="submit" value="#{ data[:strings][:code_signing][:certificate][:change_password_ok] }"]
									button.cancel.rebo.small.danger[type="button" ng-click="certificateCtrl.cancelPasswordChange()"] == data[:strings][:code_signing][:certificate][:change_password_cancel]
						.expose[trigger-popover="#{ data[:strings][:code_signing][:expose_for_pr_popover_content] }"]
							checkbox[ng-model="certificateCtrl.certificateIsExposeGetterSetterConfigs[$index].getterSetter" ng-disabled="certificateCtrl.certificateIsExposeGetterSetterConfigs[$index].progress.isInProgress" ng-model-options="{getterSetter: true}" checkbox-id-expression="'code-signin-certificate-is-expose-checkbox-' + $index"]
							label[for="'code-signin-certificate-is-expose-checkbox-' + $index"] == data[:strings][:code_signing][:certificate][:is_expose]
						.actions[ng-if="certificate != certificateCtrl.renamedCertificate && certificate != certificateCtrl.passwordEditedCertificate"]
							a.furto.download[href="{{ certificate.download() }}"] = svg("arrow_tailed_slim-down")
							button.furto.delete[ng-click="certificateCtrl.deleteCertificate(certificate)"] = svg("cross")
				p.notification.error[ng-if="certificateCtrl.certificates.length >= certificateCtrl.maximumCertificatesCount"] == data[:strings][:code_signing][:certificate][:upload_count_limit_reached]
				p.progress-indicator[progress-model="certificateCtrl.uploadCertificatesProgress"]
				.file-upload[ng-if="!certificateCtrl.uploadCertificatesProgress.isInProgress"]
				.file-upload[ng-if="!certificateCtrl.uploadCertificatesProgress.isInProgress && certificateCtrl.certificates.length < certificateCtrl.maximumCertificatesCount"]
					file-uploader[multiple onupload="certificateCtrl.uploadCertificates()" model="certificateCtrl.certificateUploader" on-file-change="certificateCtrl.filesSelectedForUpload($files)"]
						strong == data[:strings][:code_signing][:certificate][:upload_action]
						em == data[:strings][:code_signing][:certificate][:upload_instructions]
	section.cardo.uppercase.slim.android-keystore[ng-controller="AndroidKeystoreController as androidKeystoreCtrl" ng-if="codeSigningCtrl.areAnyOfTheProjectTypesAvailable(['android', 'xamarin'])"]
		header
			h2.title
				span == data[:strings][:code_signing][:android_keystore][:header][:card_title]
			h2.expose[ng-if="androidKeystoreCtrl.keystoreFile"]
				span == data[:strings][:code_signing][:android_keystore][:header][:is_expose_param_title]
		article
			p.progress-indicator[progress-model="androidKeystoreCtrl.loadProgress"]
			p.progress-indicator[progress-model="androidKeystoreCtrl.actionProgress"]
			div[ng-if="androidKeystoreCtrl.loadProgress.isIdle && !androidKeystoreCtrl.actionProgress.isInProgress"]
				p.notification.no-icon[ng-if="!androidKeystoreCtrl.keystoreFile"] == data[:strings][:code_signing][:android_keystore][:no_keystore_file]
				div[ng-if="androidKeystoreCtrl.keystoreFile"]
					.uploaded-file
						.details
							span.file-data
								span.name[ng-bind="androidKeystoreCtrl.keystoreFile.displayName()"]
								em.download-url-env-var-key
									span> == data[:strings][:code_signing][:android_keystore][:download_url_available_as]
									code[ng-bind="KeystoreFile.downloadURLEnvVarKey() | prettifiedKey"]
						.expose[trigger-popover="#{ data[:strings][:code_signing][:expose_for_pr_popover_content] }"]
							checkbox[ng-model="androidKeystoreCtrl.keystoreFileIsExposeGetterSetterConfig.getterSetter" ng-disabled="androidKeystoreCtrl.keystoreFileIsExposeGetterSetterConfig.progress.isInProgress" ng-model-options="{getterSetter: true}" checkbox-id-expression="'code-signin-android-keystore-is-expose-checkbox-' + $index"]
							label[for="'code-signin-android-keystore-is-expose-checkbox-' + $index"] == data[:strings][:code_signing][:android_keystore][:is_expose]
						.actions
							a.furto.download[href="{{ androidKeystoreCtrl.keystoreFile.download() }}"] = svg("arrow_tailed_slim-down")
							button.furto.delete[ng-click="androidKeystoreCtrl.deleteKeystoreFile()"] = svg("cross")
					form.keystore-metadata[name="androidKeystoreCtrl.keystoreMetadataForm" ng-submit="androidKeystoreCtrl.saveMetadata()" autocomplete="off"]
						section
							p
								span> == data[:strings][:code_signing][:android_keystore][:keystore_password_as]
								code.env-var[ng-bind="KeystoreFile.androidKeystorePasswordEnvVarKey | prettifiedKey"]
							input.env-var[type="{{ androidKeystoreCtrl.showPassword ? 'text' : 'password' }}" name="password" required ng-model="androidKeystoreCtrl.keystoreFile.password" placeholder="#{ data[:strings][:code_signing][:android_keystore][:password_placeholder] }"]
							.show-password
								checkbox.small[ng-model="androidKeystoreCtrl.showPassword" checkbox-id-expression="'code-signin-android-keystore-show-password-checkbox-' + $index"]
								label[for="'code-signin-android-keystore-show-password-checkbox-' + $index"] == data[:strings][:code_signing][:android_keystore][:show_password]
						section
							p
								span> == data[:strings][:code_signing][:android_keystore][:keystore_alias_as]
								code.env-var[ng-bind="KeystoreFile.androidKeystoreAliasEnvVarKey | prettifiedKey"]
							input.env-var[type="{{ androidKeystoreCtrl.showAlias ? 'text' : 'password' }}" name="alias" required ng-model="androidKeystoreCtrl.keystoreFile.alias" placeholder="#{ data[:strings][:code_signing][:android_keystore][:alias_placeholder] }"]
							.show-password
								checkbox.small[ng-model="androidKeystoreCtrl.showAlias" checkbox-id-expression="'code-signin-android-keystore-show-alias-checkbox-' + $index"]
								label[for="'code-signin-android-keystore-show-alias-checkbox-' + $index"] == data[:strings][:code_signing][:android_keystore][:show_alias]
						section
							p
								span> == data[:strings][:code_signing][:android_keystore][:private_key_password_as]
								code.env-var[ng-bind="KeystoreFile.androidKeystorePrivateKeyPasswordEnvVarKey | prettifiedKey"]
							input.env-var[type="{{ androidKeystoreCtrl.showPrivateKeyPassword ? 'text' : 'password' }}" name="privateKeyPassword" required ng-model="androidKeystoreCtrl.keystoreFile.privateKeyPassword" placeholder="#{ data[:strings][:code_signing][:android_keystore][:private_key_password_placeholder] }"]
							.show-password
								checkbox.small[ng-model="androidKeystoreCtrl.showPrivateKeyPassword" checkbox-id-expression="'code-signin-android-keystore-show-private-key-password-checkbox-' + $index"]
								label[for="'code-signin-android-keystore-show-private-key-password-checkbox-' + $index"] == data[:strings][:code_signing][:android_keystore][:show_private_key_password]
						input.rebo.big.green.save.submit[type="submit" value="#{ data[:strings][:code_signing][:android_keystore][:save_metadata] }"]
						button.rebo.big.grey.reset[type="button" ng-click="androidKeystoreCtrl.resetMetadata()"] == data[:strings][:code_signing][:android_keystore][:reset_to_saved]
			p.notification.error[ng-if="androidKeystoreCtrl.genericFileAndKeystoreFileCountSum >= androidKeystoreCtrl.maximumGenericFileAndKeystoreFileCountSum"] == data[:strings][:code_signing][:generic_file][:upload_count_limit_reached]
			.file-upload[ng-if="!androidKeystoreCtrl.keystoreFile && !androidKeystoreCtrl.actionProgress.isInProgress && androidKeystoreCtrl.genericFileAndKeystoreFileCountSum < androidKeystoreCtrl.maximumGenericFileAndKeystoreFileCountSum"]
				file-uploader[onupload="androidKeystoreCtrl.uploadKeystoreFile()" model="androidKeystoreCtrl.keystoreFileUploader" on-file-change="$files.length > 0 ? androidKeystoreCtrl.uploadedKeystoreFile.updateFile($files[0]) : null"]
					strong[ng-bind="androidKeystoreCtrl.uploadInstruction"]
					em == data[:strings][:code_signing][:android_keystore][:upload_instructions]
	section.cardo.uppercase.slim.generic-files[ng-controller="GenericFileController as genericFileCtrl"]
		header
			h2.title
				span == data[:strings][:code_signing][:generic_file][:header][:card_title]
				span<[ng-if="genericFileCtrl.genericFiles.length > 0" ng-bind="'(' + genericFileCtrl.genericFiles.length + '/' + genericFileCtrl.maximumGenericFilesCount + ')'"]
			h2.expose[ng-if="genericFileCtrl.genericFiles.length > 0"]
				span == data[:strings][:code_signing][:generic_file][:header][:is_expose_param_title]
		article
			p.progress-indicator[progress-model="genericFileCtrl.loadGenericFilesProgress"]
			p.progress-indicator[progress-model="genericFileCtrl.deleteGenericFileProgress"]
			div[ng-if="genericFileCtrl.loadGenericFilesProgress.isIdle && !genericFileCtrl.deleteGenericFileProgress.isInProgress"]
				p.notification.no-icon[ng-if="genericFileCtrl.genericFiles.length == 0"] == data[:strings][:code_signing][:generic_file][:no_files_added_yet]
				ul.uploaded-files
					li.uploaded-file[ng-repeat="genericFile in genericFileCtrl.genericFiles"]
						.details
							span.file-data
								span.name[ng-bind="genericFile.displayName()"]
								em.download-url-env-var-key
									span> == data[:strings][:code_signing][:generic_file][:download_url_available_as]
									code[ng-bind="genericFile.downloadURLEnvVarKey() | prettifiedKey"]
						.expose[trigger-popover="#{ data[:strings][:code_signing][:expose_for_pr_popover_content] }"]
							checkbox[ng-model="genericFileCtrl.genericFileIsExposeGetterSetterConfigs[$index].getterSetter" ng-disabled="genericFileCtrl.genericFileIsExposeGetterSetterConfigs[$index].progress.isInProgress" ng-model-options="{getterSetter: true}" checkbox-id-expression="'generic-file-is-expose-checkbox-' + $index"]
							label[for="'generic-file-is-expose-checkbox-' + $index"] == data[:strings][:code_signing][:generic_file][:is_expose]
						.actions
							a.furto.download[href="{{ genericFile.download() }}"] = svg("arrow_tailed_slim-down")
							button.furto.delete[ng-click="genericFileCtrl.deleteGenericFile(genericFile)"] = svg("cross")
				p.notification.error[ng-if="genericFileCtrl.genericFiles.length >= genericFileCtrl.maximumGenericFilesCount"] == data[:strings][:code_signing][:generic_file][:upload_count_limit_reached]
				p.progress-indicator[progress-model="genericFileCtrl.uploadGenericFileProgress"]
				.file-upload[ng-if="!genericFileCtrl.uploadGenericFileProgress.isInProgress && genericFileCtrl.genericFiles.length < genericFileCtrl.maximumGenericFilesCount"]
					p == data[:strings][:code_signing][:generic_file][:env_var_details]
					code.env-var[ng-bind="genericFileCtrl.downloadURLEnvVarKeyPrettifiedPreview()"]
					input.env-var[type="text" ng-model="genericFileCtrl.uploadedGenericFile.envVarPartialID" placeholder="#{ data[:strings][:code_signing][:generic_file][:uploaded_file_placeholder] }"]
					p.progress-indicator.error[ng-if="genericFileCtrl.uploadedGenericFileErrorMessage() && genericFileCtrl.uploadedGenericFile.envVarPartialID.length > 0" ng-bind="genericFileCtrl.uploadedGenericFileErrorMessage()"]
					file-uploader[onupload="genericFileCtrl.uploadGenericFile()" model="genericFileCtrl.genericFileUploader" on-file-change="$files.length > 0 ? genericFileCtrl.uploadedGenericFile.updateFile($files[0]) : null" ng-disabled="genericFileCtrl.uploadedGenericFileErrorMessage()"]
						strong[ng-bind="genericFileCtrl.uploadInstruction"]
						em[ng-if="genericFileCtrl.uploadedGenericFile.envVarPartialID.length > 0"] == data[:strings][:code_signing][:generic_file][:upload_instructions]
						em[ng-if="genericFileCtrl.uploadedGenericFile.envVarPartialID.length == 0"] == data[:strings][:code_signing][:generic_file][:enter_id]
