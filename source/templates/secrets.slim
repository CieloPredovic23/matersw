.tab-secrets.menu-content-padding[ng-controller="SecretsController as secretsCtrl" ng-init="secretsCtrl.init()"]
	section.cardo.warn-box
		.icon
		.message
			.title == data[:strings][:env_vars][:secrets][:warn][:title]
			ul
				li == data[:strings][:env_vars][:secrets][:warn][:detail_1]
				li == data[:strings][:env_vars][:secrets][:warn][:detail_2]
				li == data[:strings][:env_vars][:secrets][:warn][:detail_3]
				li == data[:strings][:env_vars][:secrets][:warn][:detail_4]
	section.cardo
		header
			h2 == data[:strings][:env_vars][:secrets][:title]
		article
			ul.env-vars[order-by-drag models="appService.secrets"]
				li[ng-repeat="secret in appService.secrets"]
					p.progress-indicator[progress-model="secret.customProperties.progress"]
					form[name="secretForm" ng-if="!secret.customProperties.progress.isInProgress" autocomplete="off" autocapitalize="none"]
						.key-value-delete
							input.key[type="text" name="key" ng-model="secret.key" ng-model-options="{getterSetter: true}" ng-disabled="!secret.isKeyChangeable" custom-validators="{'key': Variable.isValidKey(secret.key(), appService.secrets)}" placeholder="#{ data[:strings][:env_vars][:key_placeholder] }" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" skip-drag-order]
							.value-with-actions.secret
								textarea.value[name="value" msd-elastic ng-model="secretsCtrl.valueGetterSetterForSecret(secret)" ng-class="{'protected' : requestService.mode == 'website' && secret.isProtected()}" ng-disabled="!secret.shouldShowValue" ng-model-options="{getterSetter: true}" ng-trim="false" placeholder="#{ data[:strings][:env_vars][:value_placeholder] }" skip-drag-order]
								.lock[ng-if="requestService.mode == 'website' && !secret.isKeyChangeable && secret.isProtected()"] = svg("main/menuicon-secrets")
								eye-checkbox[ng-if="requestService.mode == 'website' && !secret.isKeyChangeable && !secret.isProtected()" ng-model="secretsCtrl.valueVisibilityGetterSetterForSecret(secret)" ng-model-options="{getterSetter: true}" checkbox-id-expression="'secret-env-var-show-value-checkbox-' + $index"]
								.should-show-value[ng-if="requestService.mode == 'website' && !secret.isKeyChangeable && !secret.isProtected()"]
									checkbox.small[ng-model="secretsCtrl.valueVisibilityGetterSetterForSecret(secret)" ng-model-options="{getterSetter: true}" checkbox-id-expression="'env-var-editor-is-expand-checkbox-' + $index"]
									label[for="env-var-editor-is-expand-checkbox-{{ $index }}"] == data[:strings][:env_vars][:actions][:show_value]
							.actions[floating-menu toggle="secret.customProperties.isMenuVisible"]
								button.dropdown-toggle[ng-click="secret.customProperties.isMenuVisible = !secret.customProperties.isMenuVisible"] = svg("three-horizontal-dots")
								.dropdown[ng-if="secret.customProperties.isMenuVisible"]
									button.dropdown-option.make-it-protected[ng-if="requestService.mode == 'website' && !secret.isProtected()" ng-click="secretsCtrl.makeSecretProtected(secret)"] == data[:strings][:env_vars][:actions][:make_it_protected]
									button.dropdown-option.delete-env-var[ng-click="secretsCtrl.removeSecretFromSecrets(secret, appService.secrets)"] == data[:strings][:env_vars][:actions][:delete_env_var]

						.env-var-settings
							.is-expand
								checkbox.small[name="isExpand" ng-model="secret.isExpand" ng-model-options="{getterSetter: true}" ng-disabled="secret.isProtected()" checkbox-id-expression="'env-var-editor-is-expand-checkbox-' + $index"]
								label[for="env-var-editor-is-expand-checkbox-{{ $index }}"] == data[:strings][:env_vars][:replace_variables_label]
							.is-expose-with-popover
								.is-expose[ng-attr-trigger-popover="{{ appService.appDetails.isPublic ? '#{ data[:strings][:env_vars][:expose_for_public_app_pr_popover_content] }' : '#{ data[:strings][:env_vars][:expose_for_pr_popover_content] }' }}"]
									checkbox.small[name="isExpose" ng-model="secret.isExpose" ng-model-options="{getterSetter: true}" ng-disabled="secret.isProtected() || appService.appDetails.isPublic" checkbox-id-expression="'env-var-editor-is-expose-checkbox-' + $index"]
									label[for="env-var-editor-is-expose-checkbox-{{ $index }}"] == data[:strings][:env_vars][:expose_for_pr_label]
						.actions.small
							button.option.make-it-protected.rebo.hollow.grey[ng-if="requestService.mode == 'website' && !secret.isProtected()" ng-click="secretsCtrl.makeSecretProtected(secret)"] == data[:strings][:env_vars][:actions][:make_it_protected]
							button.option.delete-env-var.rebo.danger[ng-click="secretsCtrl.removeSecretFromSecrets(secret, appService.secrets)"] == data[:strings][:env_vars][:actions][:delete_env_var]
						p.notification.warning[ng-if="secretForm.key.$invalid && !secretForm.key.$pristine" ng-bind="secretsCtrl.secretValidationWarning(secret, appService.secrets)"]
			button.add.rebo.green[ng-click="secretsCtrl.addToSecrets(appService.secrets)"] == data[:strings][:env_vars][:add_new]
