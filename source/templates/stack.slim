.tab-stack.menu-content-padding[ng-controller="StackController as stackCtrl" ng-init="stackCtrl.init()"]
	section.cardo.stack-settings.default
		header
			h2 == data[:strings][:stack][:default_stack_settings][:header_title]
			p.header-description == replaced_string(data[:strings][:stack][:default_stack_settings][:header_description], [data[:routes][:other][:bitrise_available_stacks]])
		article
			section
				.max-width-wrapper
					p.notification.warning.invalid-stack[ng-if="appService.availableStacks().indexOf(appService.stack) == -1"] == data[:strings][:stack][:default_stack_settings][:invalid_stack]
					.stack-selector-wrapper
						select.stack-selector[ng-model="appService.stack" ng-options="stackCtrl.stackOptionTitle(stack) for stack in stackCtrl.defaultStackOptions()" ng-change="appService.dockerImage = stackCtrl.defaultDockerImagesByStackIDs[stack.id] !== undefined ? '' : null"]
					.stack-info
						.info-badge-wrapper = svg("info_badge")
						.stack-info-text
							.stack-description[btf-markdown="appService.stack.description"]
							a.stack-info-link[ng-href="{{ appService.stack.descriptionURL }}" target="_blank"] == data[:strings][:stack][:more_info_about]
					.docker-image-settings[ng-if="stackCtrl.defaultDockerImagesByStackIDs[appService.stack.id] !== undefined"]
						label.docker-image-label == data[:strings][:stack][:docker_image_to_use]
						input.docker-image[type="text" ng-model="appService.dockerImage" ng-model-options="{getterSetter: true}" placeholder="{{ stackCtrl.defaultDockerImagesByStackIDs[appService.stack.id] }}"]
	section.cardo.stack-settings.workflow-specific
		header
			h2 == data[:strings][:stack][:workflow_specific_settings][:header_title]
			p == replaced_string(data[:strings][:stack][:workflow_specific_settings][:header_description], [data[:routes][:other][:bitrise_available_stacks]])
		article
			section.workflow[ng-repeat="workflow in stackCtrl.workflows"]
				.max-width-wrapper
					h4.workflow-header
						strong.workflow-id[ng-bind="workflow.id"]
						span == data[:strings][:stack][:workflow_id_postfix]
					.stack-selector-wrapper[ng-class="{'default': !stackCtrl.stackGetterSetterForWorkflow(workflow)()}"]
						select.stack-selector[ng-model="stackCtrl.stackGetterSetterForWorkflow(workflow)" ng-model-options="{getterSetter: true}" ng-options="stackCtrl.stackOptionTitle(stack) for stack in [null].concat(appService.availableStacks())"]
						label.default-stack == data[:strings][:stack][:default]
					.stack-info
						.info-badge-wrapper = svg("info_badge")
						.stack-info-text
							.stack-description[btf-markdown="stackCtrl.stackGetterSetterForWorkflow(workflow, true)().description"]
							a.stack-info-link[ng-href="{{ stackCtrl.stackGetterSetterForWorkflow(workflow, true)().descriptionURL }}" target="_blank"] == data[:strings][:stack][:more_info_about]
