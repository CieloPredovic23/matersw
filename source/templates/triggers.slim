.tab-triggers[ng-controller="TriggersController as triggersCtrl"]
	fieldset.type-filter
		.type[ng-repeat="triggerType in triggerTypes" ng-init="id = 'trigger-type-filter-' + triggerType.id"]
			input[type="radio" ng-model="triggersCtrl.triggerTypeSelected" ng-model-options="{getterSetter: true}" id="{{ id }}" ng-value="triggerType"]
			label[for="{{ id }}" ng-bind="triggerType.id | displayNameForTriggerType"]
	ul[order-by-drag models="triggersCtrl.selectedTriggerType.triggers" draggable-selector="':not(.no-trigger)'"]
		li[ng-repeat="trigger in triggersCtrl.selectedTriggerType.triggers.concat(null)" ng-class="{'no-trigger': trigger == null}"]
			button.add-trigger[ng-click="triggersCtrl.addTriggerSelectedAtIndex($index)" ng-if="triggersCtrl.newTriggerIndex !== $index" ng-disabled="triggersCtrl.editedTrigger"] == data[:strings][:triggers][:add]
			.details[ng-if="trigger != null || triggersCtrl.newTriggerIndex === $index"]
				.manage-trigger[ng-if="(trigger == triggersCtrl.selectedTrigger) || (triggersCtrl.newTriggerIndex === $index)"]
					fieldset[ng-if="triggersCtrl.selectedTrigger"]
						.type-tag-filter[ng-repeat="triggerType in triggerTypes" ng-init="id = 'selected-trigger-type-' + triggerType"]
							input[type="radio" ng-model="triggersCtrl.editedTrigger.type" ng-model-options="{getterSetter: true}" id="{{ id }}" ng-value="triggerType.id"]
							label[for="{{ id }}" ng-bind="triggerType.id | displayNameForTriggerType"]
					div[ng-switch="triggersCtrl.editedTrigger.type()"]
						fieldset[ng-switch-when="push"]
							label == data[:strings][:triggers][:push_branch]
							input[type="text" ng-model="triggersCtrl.editedTrigger.pushBranchPattern" ng-model-options="{getterSetter: true}" placeholder="*"]
						fieldset[ng-switch-when="pull-request"]
							label == data[:strings][:triggers][:source_branch]
							input[type="text" ng-model="triggersCtrl.editedTrigger.pullRequestSourceBranchPattern" ng-model-options="{getterSetter: true}" placeholder="*"]
							label == data[:strings][:triggers][:target_branch]
							input[type="text" ng-model="triggersCtrl.editedTrigger.pullRequestTargetBranchPattern" ng-model-options="{getterSetter: true}" placeholder="*"]
						fieldset[ng-switch-when="tag"]
							label == data[:strings][:triggers][:tag]
							input[type="text" ng-model="triggersCtrl.editedTrigger.tagPattern" ng-model-options="{getterSetter: true}" placeholder="*"]
					select[ng-options="workflow.id as workflow.id for workflow in triggersCtrl.workflows" ng-model="triggersCtrl.editedTrigger.workflowID" ng-model-options="{getterSetter: true}"]
					button[ng-click="triggersCtrl.triggerEditFinished()" ng-disabled="!triggersCtrl.editedTrigger.workflowID"] == data[:strings][:triggers][:done]
					button[ng-click="triggersCtrl.triggerEditCancelled()"] == data[:strings][:triggers][:cancel]
				button[ng-if="trigger != triggersCtrl.selectedTrigger" ng-click="triggersCtrl.triggerSelected(trigger)" ng-switch="trigger.type()"]
					span
						span[ng-switch-when="push"]
							span == data[:strings][:triggers][:push_branch]
							strong[ng-bind="trigger.pushBranchPattern() | prettifiedTriggerPattern"]
						span[ng-switch-when="pull-request"]
							span
								span == data[:strings][:triggers][:source_branch]
								strong[ng-bind="trigger.pullRequestSourceBranchPattern() | prettifiedTriggerPattern"]
							span
								span == data[:strings][:triggers][:target_branch]
								strong[ng-bind="trigger.pullRequestTargetBranchPattern() | prettifiedTriggerPattern"]
						span[ng-switch-when="tag"]
							span == data[:strings][:triggers][:tag]
							strong[ng-bind="trigger.tagPattern() | prettifiedTriggerPattern"]
					span
						span == data[:strings][:triggers][:workflow]
						strong[ng-bind="trigger.workflowID()"]
				button.delete[ng-click="triggersCtrl.deleteTriggerSelected(trigger)"] == data[:strings][:triggers][:delete]
