.tab-triggers[ng-controller="TriggersController as triggersCtrl"]
	.type-filter
		.type[ng-repeat="triggerType in triggerTypes" ng-init="id = 'trigger-type-filter-' + triggerType.id"]
			input[type="radio" ng-model="triggersCtrl.triggerTypeSelected" ng-model-options="{getterSetter: true}" id="{{ id }}" ng-value="triggerType" tabindex="{{ triggerType == triggersCtrl.selectedTriggerType ? '-1' : '0' }}"]
			label[for="{{ id }}" ng-bind="triggerType.id | displayNameForTriggerType"]
	ul[order-by-drag models="triggersCtrl.selectedTriggerType.triggers" draggable-selector="':not(.no-trigger)'" disable-order-on="triggersCtrl.editedTrigger"]
		li[ng-repeat="trigger in triggersCtrl.selectedTriggerType.triggers.concat(null)" ng-class="{'no-trigger': trigger == null}"]
			button.add-trigger[ng-if="triggersCtrl.newTriggerIndex !== $index" ng-click="triggersCtrl.addTriggerSelectedAtIndex($index)" ng-disabled="triggersCtrl.editedTrigger"] == data[:strings][:triggers][:add]
			.trigger[ng-if="trigger != null"]
				.manage-trigger[ng-if="(trigger == triggersCtrl.selectedTrigger) || (triggersCtrl.newTriggerIndex === $index)" ng-switch="trigger.type()"]
					span.trigger-info.pattern.push[ng-switch-when="push"]
						label == data[:strings][:triggers][:push_branch]
						input.value[type="text" ng-model="trigger.pushBranchPattern" ng-model-options="{getterSetter: true}"]
					span.trigger-info.pattern.pull-request[ng-switch-when="pull-request"]
						span.source
							label == data[:strings][:triggers][:source_branch]
							input.value[type="text" ng-model="trigger.pullRequestSourceBranchPattern" ng-model-options="{getterSetter: true}"]
						span.target
							label == data[:strings][:triggers][:target_branch]
							input.value[type="text" ng-model="trigger.pullRequestTargetBranchPattern" ng-model-options="{getterSetter: true}"]
					span.trigger-info.pattern.tag[ng-switch-when="tag"]
						label == data[:strings][:triggers][:tag]
						input.value[type="text" ng-model="trigger.tagPattern" ng-model-options="{getterSetter: true}"]
					= svg("arrow_tailed_slim-down")
					select.trigger-info.workflow[ng-model="trigger.workflowID" ng-model-options="{getterSetter: true}" ng-options="workflow.id as workflow.id for workflow in triggersCtrl.workflows"]
				button.select-trigger[ng-if="trigger != triggersCtrl.selectedTrigger" ng-click="triggersCtrl.triggerSelected(trigger)" ng-switch="trigger.type()"]
					span.trigger-info.pattern.push[ng-switch-when="push"]
						span.label == data[:strings][:triggers][:push_branch]
						strong.value[ng-bind="trigger.pushBranchPattern() | prettifiedTriggerPattern"]
					span.trigger-info.pattern.pull-request[ng-switch-when="pull-request"]
						span.source
							span.label == data[:strings][:triggers][:source_branch]
							strong.value[ng-bind="trigger.pullRequestSourceBranchPattern() | prettifiedTriggerPattern"]
						span.target
							span.label == data[:strings][:triggers][:target_branch]
							strong.value[ng-bind="trigger.pullRequestTargetBranchPattern() | prettifiedTriggerPattern"]
					span.trigger-info.pattern.tag[ng-switch-when="tag"]
						span.label == data[:strings][:triggers][:tag]
						strong.value[ng-bind="trigger.tagPattern() | prettifiedTriggerPattern"]
					= svg("arrow_tailed_slim-down")
					span.trigger-info.workflow
						span.label == data[:strings][:triggers][:workflow]
						strong.value[ng-bind="trigger.workflowID()"]
				button.delete[ng-click="triggersCtrl.deleteTriggerSelected(trigger)"] == svg("trash")
